ASSIGN CURRPER1 CURRENT PERIOD START; 
ASSIGN CURRPER2 CURRENT PERIOD END;

ASSIGN REALLOCATE       LITERAL 'Y';         ! Y or N -- REALLOCATE EXCESS E_ELSE GROWTH?  


!SET FREQ A;
!SET PER #CURRPER1 #CURRPER2;

!OPEN #BLSBNK|, #BEABNK|;


! JOB ADDFACTORS

!FOR MYSERS = ECT, EMN, E_TRADE, E_TU, E_FIR, EAF, EHC, E_ELSE, E_SV, EGVFD, E_GVSL, EGV;
FOR MYSERS = ECT, EMN, E_TRADE, E_TU, E_FIR, EAF, EHC, EGVFD, E_GVSL;

ASSIGN LAST_PER FROM #BLSBNK|:#MYSERS|@HAW.A PER2;
!SERIES <#LAST_PER #LAST_PER> #MYSERS|@HAW.TEMP = #MYSERS|@HAW.A - E_NF@HAW.A*(#MYSERS|@NBI.A/E_NF@NBI.A);
SERIES <#LAST_PER #LAST_PER> #MYSERS|@HAW.TEMP = #MYSERS|@HAW.A - E_NF@HAW.A*(#MYSERS|@NBI.A/E_NF@NBI.A) * (((#MYSERS|@HAW.A/E_NF@HAW.A)/(#MYSERS|@NBI.A/E_NF@NBI.A)) / (((#MYSERS|@HAW.A/E_NF@HAW.A)/(#MYSERS|@NBI.A/E_NF@NBI.A) + (#MYSERS|@KAU.A/E_NF@KAU.A)/(#MYSERS|@NBI.A/E_NF@NBI.A) + (#MYSERS|@MAU.A/E_NF@MAU.A)/(#MYSERS|@NBI.A/E_NF@NBI.A))/3));
ASSIGN ADD_VAL VALUE #MYSERS|@HAW.TEMP;
!SERIES <#LAST_PER #CURRPER2> #MYSERS|@HAW.ADD = #ADD_VAL REPEAT *;
SERIES <#CURRPER1 #CURRPER2> #MYSERS|@HAW.ADD = #ADD_VAL REPEAT *;
!PRINT #MYSERS|@HAW.TEMP, #ADD_VAL, #MYSERS|@HAW.ADD;
DELETE #MYSERS|@HAW.TEMP, ADD_VAL;

ASSIGN LAST_PER FROM #BLSBNK|:#MYSERS|@KAU.A PER2;
!SERIES <#LAST_PER #LAST_PER> #MYSERS|@KAU.TEMP = #MYSERS|@KAU.A - E_NF@KAU.A*(#MYSERS|@NBI.A/E_NF@NBI.A);
SERIES <#LAST_PER #LAST_PER> #MYSERS|@KAU.TEMP = #MYSERS|@KAU.A - E_NF@KAU.A*(#MYSERS|@NBI.A/E_NF@NBI.A) * (((#MYSERS|@KAU.A/E_NF@KAU.A)/(#MYSERS|@NBI.A/E_NF@NBI.A)) / (((#MYSERS|@HAW.A/E_NF@HAW.A)/(#MYSERS|@NBI.A/E_NF@NBI.A) + (#MYSERS|@KAU.A/E_NF@KAU.A)/(#MYSERS|@NBI.A/E_NF@NBI.A) + (#MYSERS|@MAU.A/E_NF@MAU.A)/(#MYSERS|@NBI.A/E_NF@NBI.A))/3));
ASSIGN ADD_VAL VALUE #MYSERS|@KAU.TEMP;
!SERIES <#LAST_PER #CURRPER2> #MYSERS|@KAU.ADD = #ADD_VAL REPEAT *;
SERIES <#CURRPER1 #CURRPER2> #MYSERS|@KAU.ADD = #ADD_VAL REPEAT *;
!PRINT #MYSERS|@KAU.TEMP, #ADD_VAL, #MYSERS|@KAU.ADD;
DELETE #MYSERS|@KAU.TEMP, ADD_VAL;

ASSIGN LAST_PER FROM #BLSBNK|:#MYSERS|@MAU.A PER2;
!SERIES <#LAST_PER #LAST_PER> #MYSERS|@MAU.TEMP = #MYSERS|@MAU.A - E_NF@MAU.A*(#MYSERS|@NBI.A/E_NF@NBI.A);
SERIES <#LAST_PER #LAST_PER> #MYSERS|@MAU.TEMP = #MYSERS|@MAU.A - E_NF@MAU.A*(#MYSERS|@NBI.A/E_NF@NBI.A) * (((#MYSERS|@MAU.A/E_NF@MAU.A)/(#MYSERS|@NBI.A/E_NF@NBI.A)) / (((#MYSERS|@HAW.A/E_NF@HAW.A)/(#MYSERS|@NBI.A/E_NF@NBI.A) + (#MYSERS|@KAU.A/E_NF@KAU.A)/(#MYSERS|@NBI.A/E_NF@NBI.A) + (#MYSERS|@MAU.A/E_NF@MAU.A)/(#MYSERS|@NBI.A/E_NF@NBI.A))/3));
ASSIGN ADD_VAL VALUE #MYSERS|@MAU.TEMP;
!SERIES <#LAST_PER #CURRPER2> #MYSERS|@MAU.ADD = #ADD_VAL REPEAT *;
SERIES <#CURRPER1 #CURRPER2> #MYSERS|@MAU.ADD = #ADD_VAL REPEAT *;
!PRINT #MYSERS|@MAU.TEMP, #ADD_VAL, #MYSERS|@MAU.ADD;
DELETE #MYSERS|@MAU.TEMP, ADD_VAL;

!ASSIGN LAST_PER FROM #BLSBNK|:#MYSERS|@MAU.A PER2;
!SERIES <#LAST_PER #CURRPER2> #MYSERS|@MAU.ADD = - #MYSERS|@HAW.ADD - #MYSERS|@KAU.ADD;

END; ! END FOR MYSERS  


! REDISTRIBUTION OF EXCESS RESIDUALS (E_ELSE) INTO EACH INDUSTY IN EACH COUNTY.
IF ('#REALLOCATE'=='Y');

! OPEN CASOL, ASOLX, QSOLX;
! PRINT <2016 2022> PCH(E_ELSE@NBI.A), PCH(E_ELSE@MAU.SOLA), PCH(E_ELSE@HAW.SOLA), PCH(E_ELSE@KAU.SOLA);
! PRINT <2016 2022> PCH(E_ELSE@NBI.A), (PCH(E_ELSE@MAU.SOLA))-(PCH(E_ELSE@NBI.A)), (PCH(E_ELSE@HAW.SOLA))-(PCH(E_ELSE@NBI.A)), (PCH(E_ELSE@KAU.SOLA))-(PCH(E_ELSE@NBI.A));
! PRINT <2016 2022> E_ELSE@MAU.SOLA/E_NF@MAU.A, E_ELSE@HAW.SOLA/E_NF@HAW.A, E_ELSE@KAU.SOLA/E_NF@KAU.A;
! ASSIGN SECTOR LITERAL 'MN';
! PRINT <2018 2022> DIFF(E#SECTOR|@NBI.A),  DIFF(E#SECTOR|@MAU.SOLA),  DIFF(E#SECTOR|@HAW.SOLA),  DIFF(E#SECTOR|@KAU.SOLA);
! PRINT <2018 2022> PCH(E#SECTOR|@NBI.A),  E#SECTOR|@MAU.SOLA%,  E#SECTOR|@HAW.SOLA%,  E#SECTOR|@KAU.SOLA%;
! PRINT <2018 2022> E#SECTOR|@NBI.A, E#SECTOR|@HAW.SOLA + E#SECTOR|@MAU.SOLA + E#SECTOR|@KAU.SOLA;
! CLOSE *;

!                          PCH(E_EL  PCH(E_EL  PCH(E_EL  PCH(E_EL
!                          SE@NBI.A  SE@MAU.S  SE@HAW.S  SE@KAU.S
!                             )        OLA)      OLA)      OLA)
! 
! 
!                  2018        1.09      0.32     -1.31      3.95
!                  2019       -4.34     -4.78     -1.80     -0.28
!                  2020       -6.36      5.21    -22.05     -1.79
!                  2021        3.87     -3.88     19.92      0.18
!                  2022        1.06     -0.19      2.70      0.87
!  
!                          PCH(E_EL  PCH(E_EL  PCH(E_EL  PCH(E_EL
!                          SE@NBI.A  SE@NBI.A  SE@NBI.A  SE@NBI.A
!                             )      )-(PCH(E  )-(PCH(E  )-(PCH(E
!                                    _ELSE@MA  _ELSE@HA  _ELSE@KA
!                                    U.SOLA))  W.SOLA))  U.SOLA))
! 
! 
!                  2018        1.09      0.77      2.41     -2.85
!                  2019       -4.34      0.44     -2.54     -4.06
!                  2020       -6.36    -11.57     15.68     -4.57
!                  2021        3.87      7.75    -16.05      3.69
!                  2022        1.06      1.25     -1.64      0.19



! THE COEFFICIENTS BELOW ARE THE GROWTH DIFFERENTIALS BETWEEN E_ELSE@CNTY AND E_ELSE@NBI IN HIST+1
! ASSIGN MAU_BALANC VALUE  0.0889;
! ASSIGN HAW_BALANC VALUE -0.1207;
! ASSIGN KAU_BALANC VALUE  0.0375;
! 
! ! SERIES TO REDISTRIBUTE OVER
! LIST SERLIST = ECT, EMN, E_TRADE, E_TU, E_FIR, EAF, EHC, EGVFD, E_GVSL;
! ! FOR EACH SECTOR ABSOLUTE NBI CHANGES IN FIRST YEAR OF FORECAST
! LIST SERCHG  = 0.86, 0.43, 9.11, 1.44, 0.29, 18.44, 1.16, 0.27, 0.14;
! ! SUM OF CHANGES: 30.73
! ASSIGN CHGSUM VALUE  32.14;

! THE COEFFICIENTS BELOW ARE THE GROWTH DIFFERENTIALS BETWEEN E_ELSE@CNTY AND E_ELSE@NBI IN HIST+1
ASSIGN MAU_BALANC VALUE  0.0911*0.6;
ASSIGN HAW_BALANC VALUE -0.1224*0.6;
ASSIGN KAU_BALANC VALUE  0.0400*0.6;

! SERIES TO REDISTRIBUTE OVER
LIST SERLIST = ECT, EMN, E_TRADE, E_TU, E_FIR, EAF, EHC, EGVFD, E_GVSL;
! FOR EACH SECTOR ABSOLUTE NBI CHANGES IN FIRST YEAR OF FORECAST
LIST SERCHG  = 0.86, 0.48, 9.25, 1.56, 0.31, 18.90, 1.17, 0.14, 0.14;
! SUM OF CHANGES SERCHG
ASSIGN CHGSUM VALUE  32.81;

! THE REALLOCATION PERIOD STARTS #LAST_PER+1, ENDS #LAST_PER+#REAL_END
ASSIGN REAL_END LITERAL '30';

! FOR MYSERS = ECT, EMN, E_TRADE, E_TU, E_FIR, EAF, EHC;!, EGVFD, E_GVSL;
FOR MYSERS = #SERLIST MYCHG = #SERCHG;

ASSIGN LAST_PER FROM #BLSBNK|:#MYSERS|@HAW.A PER2;
! SERIES <#LAST_PER #LAST_PER> #MYSERS|@HAW.TEMP = #HAW_BALANC*E_ELSE@HAW.A * (#MYSERS|@HAW.A/(E_NF@HAW.A-EGV@HAW.A));
SERIES <#LAST_PER #LAST_PER> #MYSERS|@HAW.TEMP = #HAW_BALANC*E_ELSE@HAW.A * #MYCHG/#CHGSUM;
ASSIGN ADD_VAL VALUE #MYSERS|@HAW.TEMP;
SERIES <#LAST_PER+1 #LAST_PER+#REAL_END> ADD_VAL_SER = #ADD_VAL, #ADD_VAL/3;!, #ADD_VAL/3, #ADD_VAL/3, #ADD_VAL/3; ! REPEAT *;
! SERIES <#LAST_PER+1 #LAST_PER+#REAL_END> ADD_VAL_SER = #ADD_VAL REPEAT *;
! SERIES <#LAST_PER+1 #LAST_PER+1> ADD_VAL_SER = #ADD_VAL;
SERIES <#LAST_PER+#REAL_END #LAST_PER+#REAL_END> ADD_VAL_SER = 0;
SMOOTH ADD_VAL_SER = ADD_VAL_SER LINEAR;
SERIES <#LAST_PER+1 #LAST_PER+#REAL_END> #MYSERS|@HAW.ADD = #MYSERS|@HAW.ADD + (ADD_VAL_SER);
!PRINT #MYSERS|@HAW.TEMP, #ADD_VAL, #MYSERS|@HAW.ADD;
DELETE #MYSERS|@HAW.TEMP, ADD_VAL, ADD_VAL_SER;

ASSIGN LAST_PER FROM #BLSBNK|:#MYSERS|@KAU.A PER2;
! SERIES <#LAST_PER #LAST_PER> #MYSERS|@KAU.TEMP = #KAU_BALANC*E_ELSE@KAU.A * (#MYSERS|@KAU.A/(E_NF@KAU.A-EGV@KAU.A));
SERIES <#LAST_PER #LAST_PER> #MYSERS|@KAU.TEMP = #KAU_BALANC*E_ELSE@KAU.A * #MYCHG/#CHGSUM;
ASSIGN ADD_VAL VALUE #MYSERS|@KAU.TEMP;
SERIES <#LAST_PER+1 #LAST_PER+#REAL_END> ADD_VAL_SER = #ADD_VAL, #ADD_VAL/3;!, #ADD_VAL/3, #ADD_VAL/3, #ADD_VAL/3; ! REPEAT *;
! SERIES <#LAST_PER+1 #LAST_PER+#REAL_END> ADD_VAL_SER = #ADD_VAL REPEAT *;
! SERIES <#LAST_PER+1 #LAST_PER+1> ADD_VAL_SER = #ADD_VAL;
SERIES <#LAST_PER+#REAL_END #LAST_PER+#REAL_END> ADD_VAL_SER = 0;
SMOOTH ADD_VAL_SER = ADD_VAL_SER LINEAR;
SERIES <#LAST_PER+1 #LAST_PER+#REAL_END> #MYSERS|@KAU.ADD = #MYSERS|@KAU.ADD + (ADD_VAL_SER);
!PRINT #MYSERS|@KAU.TEMP, #ADD_VAL, #MYSERS|@KAU.ADD;
DELETE #MYSERS|@KAU.TEMP, ADD_VAL, ADD_VAL_SER;

ASSIGN LAST_PER FROM #BLSBNK|:#MYSERS|@MAU.A PER2;
! SERIES <#LAST_PER #LAST_PER> #MYSERS|@MAU.TEMP = #MAU_BALANC*E_ELSE@MAU.A * (#MYSERS|@MAU.A/(E_NF@MAU.A-EGV@MAU.A));
SERIES <#LAST_PER #LAST_PER> #MYSERS|@MAU.TEMP = #MAU_BALANC*E_ELSE@MAU.A * #MYCHG/#CHGSUM;
ASSIGN ADD_VAL VALUE #MYSERS|@MAU.TEMP;
SERIES <#LAST_PER+1 #LAST_PER+#REAL_END> ADD_VAL_SER = #ADD_VAL, #ADD_VAL/3;!, #ADD_VAL/3, #ADD_VAL/3, #ADD_VAL/3; ! REPEAT *;
! SERIES <#LAST_PER+1 #LAST_PER+#REAL_END> ADD_VAL_SER = #ADD_VAL REPEAT *;
! SERIES <#LAST_PER+1 #LAST_PER+1> ADD_VAL_SER = #ADD_VAL;
SERIES <#LAST_PER+#REAL_END #LAST_PER+#REAL_END> ADD_VAL_SER = 0;
SMOOTH ADD_VAL_SER = ADD_VAL_SER LINEAR;
SERIES <#LAST_PER+1 #LAST_PER+#REAL_END> #MYSERS|@MAU.ADD = #MYSERS|@MAU.ADD + (ADD_VAL_SER);
!PRINT #MYSERS|@MAU.TEMP, #ADD_VAL, #MYSERS|@MAU.ADD;
DELETE #MYSERS|@MAU.TEMP, ADD_VAL, ADD_VAL_SER;

END; ! END FOR MYSERS  

END; ! END IF REALLOCATE


! ADDITIONAL JOB ADDFACTORING

! SERIES <#LAST_PER+1 #CURRPER2> EAF@HAW.ADD1 =  1.5, 0 REPEAT *;
! SERIES <#LAST_PER+1 #CURRPER2> EAF@KAU.ADD1 = -0.5, 0 REPEAT *;
! SERIES <#LAST_PER+1 #CURRPER2> EAF@MAU.ADD1 = -1  , 0 REPEAT *;
! 
! SERIES <#CURRPER1 #CURRPER2> EAF@HAW.ADD = EAF@HAW.ADD + EAF@HAW.ADD1;
! SERIES <#CURRPER1 #CURRPER2> EAF@KAU.ADD = EAF@KAU.ADD + EAF@KAU.ADD1;
! SERIES <#CURRPER1 #CURRPER2> EAF@MAU.ADD = EAF@MAU.ADD + EAF@MAU.ADD1;


! INCOME ADDFACTORS

! FOR MYSERS = CT, MN, _TRADE, _TU, _FIR, AF, HC, _ELSE, _GVFD, _GVSL, GV;
FOR MYSERS = CT, MN, _TRADE, _FIR, AF, HC, _ELSE, GVFD, _GVSL;

ASSIGN LAST_PER FROM #BEABNK|:YL#MYSERS|_R@HAW.A PER2;
SERIES <#LAST_PER #LAST_PER> YL#MYSERS|_R@HAW.TEMP = YL#MYSERS|_R@HAW.A - YL#MYSERS|_R@NBI.A*(E#MYSERS|@HAW.A/(E#MYSERS|@HAW.A+E#MYSERS|@KAU.A+E#MYSERS|@MAU.A));
ASSIGN ADD_VAL VALUE YL#MYSERS|_R@HAW.TEMP;
!SERIES <#LAST_PER #CURRPER2> YL#MYSERS|_R@HAW.ADD = #ADD_VAL REPEAT *;
SERIES <#CURRPER1 #CURRPER2> YL#MYSERS|_R@HAW.ADD = #ADD_VAL REPEAT *;
!PRINT YL#MYSERS|_R@HAW.TEMP, #ADD_VAL, YL#MYSERS|_R@HAW.ADD;
DELETE YL#MYSERS|_R@HAW.TEMP, ADD_VAL;

END; ! END FOR MYSERS  

FOR MYSERS = CT, MN, _TRADE, _FIR, AF, HC, _ELSE, GVFD, _GVSL;

ASSIGN LAST_PER FROM #BEABNK|:YL#MYSERS|_R@KAU.A PER2;
SERIES <#LAST_PER #LAST_PER> YL#MYSERS|_R@KAU.TEMP = YL#MYSERS|_R@KAU.A - YL#MYSERS|_R@NBI.A*(E#MYSERS|@KAU.A/(E#MYSERS|@HAW.A+E#MYSERS|@KAU.A+E#MYSERS|@MAU.A));
ASSIGN ADD_VAL VALUE YL#MYSERS|_R@KAU.TEMP;
!SERIES <#LAST_PER #CURRPER2> YL#MYSERS|_R@KAU.ADD = #ADD_VAL REPEAT *;
SERIES <#CURRPER1 #CURRPER2> YL#MYSERS|_R@KAU.ADD = #ADD_VAL REPEAT *;
!PRINT YL#MYSERS|_R@KAU.TEMP, #ADD_VAL, YL#MYSERS|_R@KAU.ADD;
DELETE YL#MYSERS|_R@KAU.TEMP, ADD_VAL;

END; ! END FOR MYSERS  

FOR MYSERS = CT, MN, _TRADE, _TU, _FIR, AF, HC, _ELSE, GVFD, _GVSL;

ASSIGN LAST_PER FROM #BEABNK|:YL#MYSERS|_R@MAU.A PER2;
SERIES <#LAST_PER #LAST_PER> YL#MYSERS|_R@MAU.TEMP = YL#MYSERS|_R@MAU.A - YL#MYSERS|_R@NBI.A*(E#MYSERS|@MAU.A/(E#MYSERS|@HAW.A+E#MYSERS|@KAU.A+E#MYSERS|@MAU.A));
ASSIGN ADD_VAL VALUE YL#MYSERS|_R@MAU.TEMP;
!SERIES <#LAST_PER #CURRPER2> YL#MYSERS|_R@MAU.ADD = #ADD_VAL REPEAT *;
SERIES <#CURRPER1 #CURRPER2> YL#MYSERS|_R@MAU.ADD = #ADD_VAL REPEAT *;
!PRINT YL#MYSERS|_R@MAU.TEMP, #ADD_VAL, YL#MYSERS|_R@MAU.ADD;
DELETE YL#MYSERS|_R@MAU.TEMP, ADD_VAL;

!ASSIGN LAST_PER FROM #BEABNK|:#MYSERS|@MAU.A PER2;
!SERIES <#LAST_PER #CURRPER2> #MYSERS|@MAU.ADD = -#MYSERS|@HAW.ADD-#MYSERS|@KAU.ADD;

END; ! END FOR MYSERS  


! SPECIAL TREATMENT OF GVML

ASSIGN MYSERS        LITERAL 'GVML';
ASSIGN MYSERSE       LITERAL 'GVFD';

ASSIGN LAST_PER FROM #BEABNK|:YL#MYSERS|_R@HAW.A PER2;
SERIES <#LAST_PER #LAST_PER> YL#MYSERS|_R@HAW.TEMP = YL#MYSERS|_R@HAW.A - YL#MYSERS|_R@NBI.A*(E#MYSERSE|@HAW.A/(E#MYSERSE|@HAW.A+E#MYSERSE|@KAU.A+E#MYSERSE|@MAU.A));
ASSIGN ADD_VAL VALUE YL#MYSERS|_R@HAW.TEMP;
!SERIES <#LAST_PER #CURRPER2> YL#MYSERS|_R@HAW.ADD = #ADD_VAL REPEAT *;
SERIES <#CURRPER1 #CURRPER2> YL#MYSERS|_R@HAW.ADD = #ADD_VAL REPEAT *;
!PRINT YL#MYSERS|_R@HAW.TEMP, #ADD_VAL, YL#MYSERS|_R@HAW.ADD;
DELETE YL#MYSERS|_R@HAW.TEMP, ADD_VAL;

ASSIGN LAST_PER FROM #BEABNK|:YL#MYSERS|_R@KAU.A PER2;
SERIES <#LAST_PER #LAST_PER> YL#MYSERS|_R@KAU.TEMP = YL#MYSERS|_R@KAU.A - YL#MYSERS|_R@NBI.A*(E#MYSERSE|@KAU.A/(E#MYSERSE|@HAW.A+E#MYSERSE|@KAU.A+E#MYSERSE|@MAU.A));
ASSIGN ADD_VAL VALUE YL#MYSERS|_R@KAU.TEMP;
!SERIES <#LAST_PER #CURRPER2> YL#MYSERS|_R@KAU.ADD = #ADD_VAL REPEAT *;
SERIES <#CURRPER1 #CURRPER2> YL#MYSERS|_R@KAU.ADD = #ADD_VAL REPEAT *;
!PRINT YL#MYSERS|_R@KAU.TEMP, #ADD_VAL, YL#MYSERS|_R@KAU.ADD;
DELETE YL#MYSERS|_R@KAU.TEMP, ADD_VAL;

ASSIGN LAST_PER FROM #BEABNK|:YL#MYSERS|_R@MAU.A PER2;
SERIES <#LAST_PER #LAST_PER> YL#MYSERS|_R@MAU.TEMP = YL#MYSERS|_R@MAU.A - YL#MYSERS|_R@NBI.A*(E#MYSERSE|@MAU.A/(E#MYSERSE|@HAW.A+E#MYSERSE|@KAU.A+E#MYSERSE|@MAU.A));
ASSIGN ADD_VAL VALUE YL#MYSERS|_R@MAU.TEMP;
!SERIES <#LAST_PER #CURRPER2> YL#MYSERS|_R@MAU.ADD = #ADD_VAL REPEAT *;
SERIES <#CURRPER1 #CURRPER2> YL#MYSERS|_R@MAU.ADD = #ADD_VAL REPEAT *;
!PRINT YL#MYSERS|_R@MAU.TEMP, #ADD_VAL, YL#MYSERS|_R@MAU.ADD;
DELETE YL#MYSERS|_R@MAU.TEMP, ADD_VAL;

!ASSIGN LAST_PER FROM #BEABNK|:#MYSERS|@MAU.A PER2;
!SERIES <#LAST_PER #CURRPER2> #MYSERS|@MAU.ADD = -#MYSERS|@HAW.ADD-#MYSERS|@KAU.ADD;

