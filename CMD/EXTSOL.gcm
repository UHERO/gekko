// *************************
// FORECAST FOR THE US AND JP ECONOMY
// AUTHOR: PETER FULEKY
// DATE: 2020-06-10
// NOTES:
// ALL GROWTH RATE ENTRIES ARE IN ANNUALIZED TERMS. 
// THEY ARE HANDLED BY FUNCTIONS IN LIB.GCM
// USER INPUT IS REQUIRED IN SECTIONS DELIMITED BY // -------------------------
// COPY/PASTE THE WHOLE SCRIPT TO THE THE COMMAND LINE OR
// RUN THE WHOLE SCRIPT FROM THE COMMAND LINE USING RUN EXTSOL.GCM;
// *************************



TELL '*************************';
TELL ' SETUP                   ';
TELL '*************************';

// ITINIALIZE GLOBAL CONSTANTS ETC.
RESTART;

// STORE A RECORD OF THE OUTPUT
%SAVESCREEN = 'N';
// USE BBEDIT AS THE OUTPUT WINDOW
IF (%SAVESCREEN=='Y');  
PIPE '{%WORK_DIR}\EXTSOL_OUT.TXT';
END;
// WILL DO MOSTLY DATA MANIPULATION
MODE DATA;

// BASE YEAR FOR REAL EXCHANGE RATE CALCULATION
%BASEYEAR = 2005;

// LOAD RELEVANT DATA (REPLACE @ WITH _ IN TSD FILES)
#TSD_LIST = ('US_Q', 'US_A', 'JP_Q', 'JP_A');
FOR STRING %TSD_I = #TSD_LIST;
IMPORT <ALL TSD> '\DAT\{%TSD_I}.TSD';
END;

// MAKE COPIES OF LOADED SERIES FOR STORING HISTORY (CLONE) AND FORECASTS (_SOL*)
// INDEX ALL SERIES AND SAVE DATA IN THE BANK EXT_DAT.GBK
// CLONE;
COPY *!A TO *_SOLA!A;
COPY *!Q TO *_SOLQ!Q;
INDEX *:*!* TO #EXT_LIST;
// DISP {#EXT_LIST};
WRITE {#EXT_LIST} FILE=EXT_DAT;



TELL '*************************';
TELL '*************************';
TELL ' US FORECAST             ';
TELL '*************************';
TELL '*************************';



TELL '*************************';
TELL ' POPULATION              ';
TELL '*************************';

OPTION FREQ=A;

// USE POPULATION ESTIMATES AND PROJECTIONS FROM CENSUS
// HTTPS://WWW2.CENSUS.GOV/PROGRAMS-SURVEYS/POPPROJ/DATASETS/2017/2017-POPPROJ/NP2017_D1.CSV
// HTTPS://WWW2.CENSUS.GOV/PROGRAMS-SURVEYS/POPEST/DATASETS/2010-2017/NATIONAL/ASRH/NC-EST2017-AGESEX-RES.CSV

// -------------------------
// FILL SERIES WITH CENSUS PROJECTIONS, AND FILL IN RECENT (5 YEAR) HISTORY SO THAT GROWTH RATES AND SPLINES CAN BE CALCULATED
NCEN_US_SOLA <2016 2060> = 323127513,325511184,327891911,330268840,332639102,334998398,337341954,339665118,341963408,344234377,346481182,348695115,350872007,353008224,355100730,357147329,359146709,361098559,363003410,364862145,366676312,368447857,370178704,371871238,373527973,375151805,376746115,378314343,379860859,381390297,382907447,384415207,385917628,387418788,388922201,390430803,391947055,393472783,395009307,396557404,398117875,399690963,401276590,402874337,404483055; 			
// -------------------------

NCEN_US_SOLA /= 1000; 	// SCALE BY 1000

// INTERPOLATE ANNUAL DATA TO QUARTERLY (FUNCTION DEFINED IN LIB.GCM)
NCEN_US_SOLQ!Q = INTERP_QA_LIN(NCEN_US_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3> NCEN_US_SOLQ!Q, NCEN_US_SOLA;

OPTION FREQ=Q;

// ADDFACTOR FOR LEVEL (TRANSITION FROM HISTORY TO FORECAST)
// FIND THE LAST VALUE IN HISTORY, CREATE AN ADDFACTOR WITH THE DIFFERENCE AND ADJUST LEVEL
%DAT_END = FROMSERIES(N_US, 'DATAEND');
%N_US_SOLQ_ADDLEV = N_US[%DAT_END] - NCEN_US_SOLQ[%DAT_END];
N_US_SOLQ <%DAT_END %BNK_END> = NCEN_US_SOLQ + %N_US_SOLQ_ADDLEV;

// COMPARE GROWTH RATES IN HISTORY AND FORECAST
PRT <%CURR_YR-2 %CURR_YR+3> N_US, N_US_SOLQ;

// -------------------------
// ADDFACTOR FOR GROWTH
N_US_SOLQ_ADDGRO = 0;
N_US_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+80> = M();
N_US_SOLQ_ADDGRO <%DAT_END+20 %DAT_END+20> = -0.1;
N_US_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+4> = -0.5;
N_US_SOLQ_ADDGRO <%DAT_END+10 %DAT_END+10> = 0.0;
// -------------------------

SMOOTH N_US_SOLQ_ADDGRO = N_US_SOLQ_ADDGRO LINEAR;

// EXTEND HISTORY USING GROWTH RATE (FUNCTIONS DEFINED IN LIB.GCM)
N_US_SOLQ_GRO = PCHA(N_US_SOLQ)+N_US_SOLQ_ADDGRO;
N_US_SOLQ_GRO = PCHA_TO_PCH(N_US_SOLQ_GRO);
N_US_SOLQ <%DAT_END+1 %BNK_END> %= N_US_SOLQ_GRO;

// PRINT RESULTS
PRT <%CURR_YR-2 %CURR_YR+3> N_US_SOLQ_GRO, N_US_SOLQ_ADDGRO, PCHA(N_US_SOLQ), PCHY(N_US_SOLQ), N_US_SOLQ, NCEN_US_SOLQ!Q;
PRT %N_US_SOLQ_ADDLEV;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE N_US_SOLA!A = N_US_SOLQ!Q AVG; // FOR STOCK TYPE VARIABLES AVG, FOR FLOW TYPE VARIABLES TOTAL
PRT <%CURR_YR-2 %CURR_YR+3> N_US_SOLA!A, N_US_SOLQ!Q, N_US!A, N_US!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> N_US<DASHTYPE='1' LINECOLOR='blue'>, N_US_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, N_US!A<DASHTYPE='1' LINECOLOR='red'>, N_US_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\N_US_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> N_US!Q<TYPE=LINES DASHTYPE='1'>, N_US_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(N_US!Q)<TYPE=BOXES Y2>, PCHA(N_US_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\N_US_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*N*!*;
DELETE %N_US_SOLQ_ADDLEV, N_US_SOLQ_GRO, N_US_SOLQ_ADDGRO;



TELL '*************************';
TELL ' 16+ POPULATION          ';
TELL '*************************';

// THIS SECTION CONTAINS TWO STAGES: 
// 1. RECONCILE HISTORY AND PROJECTION OF 16+ POPULATION, 
// 2. EXTEND HISTORY OF NON-INSTITUTIONAL 16+ POPULATION WITH THE RESULT FROM 1.


// STAGE 1.


OPTION FREQ=A;	

// -------------------------
// 	GET THE 16+ US POPULATION PROJECTIONS FROM CENSUS:
// 	HTTPS://WWW2.CENSUS.GOV/PROGRAMS-SURVEYS/POPPROJ/DATASETS/2017/2017-POPPROJ/NP2017_D1.CSV
N16_US_SOLA <2016 2060> = 257955453,260310555,262550200,264792059,267049286,269282525,271511472,273756663,275962588,278018690,280054931,282067427,284005393,285905941,287783531,289630116,291415785,293243240,295043303,296814180,298553605,300259159,301929123,303562429,305158790,306719083,308245025,309738427,311201577,312637235,314048806,315438493,316810301,318168975,319519290,320865864,322213035,323564510,324923129,326291095,327670395,329062335,330468057,331888253,333322800;

// 	ADD/UPDATE RECENT HISTORY (NEED FOR SPLINES AND GROWTH CALC.):
// 	HTTPS://WWW2.CENSUS.GOV/PROGRAMS-SURVEYS/POPEST/DATASETS/2010-2017/NATIONAL/ASRH/NC-EST2017-AGESEX-RES.CSV
N16_US <2010 2017> = 243906873,246315892,248735191,251016036,253402603,255788180,258228041,260583066;

// ADDFACTOR PROJECTION BY AVERAGE DIFFERENCE DURING THE OVERLAP (2016-17). 
// THE DIFFERENCE IS (272,588+272,511)/2 = 272,550
N16_US_SOLA += 272550;
// FILL IN RECENT HISTORY
N16_US_SOLA <2010 2017> = N16_US; 
// -------------------------

// SCALE BY 1000
N16_US_SOLA = N16_US_SOLA/1000; 


// STAGE 2.


// -------------------------
// THE DENOMINATOR FOR THE LFP CALCULATION SHOULD BE NON-INSTITUTIONAL 16+ (HTTP://WWW.BLS.GOV/WEB/EMPSIT/CPSEEA01.HTM)
N16NI_US <2010 2018> = 237829,239618,243284,245679,247947,250801,253538,255079,257791;	
// THE DIFFERENCE BETWEEN 16+ AND NON-INSTITUTIONAL 16+ IS ABOUT 5.5 MILLION (CHECK THIS)
PRT <%CURR_YR-2 %CURR_YR+3> PCH(N16_US_SOLA), PCH(N16NI_US), N16_US_SOLA, N16NI_US, N16_US_SOLA-N16NI_US; 
// -------------------------

// INITIALIZE THE N16NI_US_SOLA FORECAST
N16NI_US_SOLA = N16NI_US;

// ADDFACTOR FOR LEVEL (TRANSITION FROM HISTORY TO FORECAST)
// FIND THE LAST VALUE IN HISTORY, CREATE AN ADDFACTOR WITH THE DIFFERENCE AND ADJUST LEVEL
%DAT_END = FROMSERIES(N16NI_US, 'DATAEND');
%N16_US_SOLA_ADDLEV = N16NI_US[%DAT_END] - N16_US_SOLA[%DAT_END];
N16NI_US_SOLA <%DAT_END %BNK_END> = N16_US_SOLA + %N16_US_SOLA_ADDLEV;

// COMPARE GROWTH RATES IN HISTORY AND FORECAST
PRT <%CURR_YR-2 %CURR_YR+3> N16NI_US, N16NI_US_SOLA;

// -------------------------
// ADDFACTOR FOR GROWTH (DELAYED RESPONSE 16 YEARS AFTER COVID)
N16NI_US_SOLA_ADDGRO = 0;
N16NI_US_SOLA_ADDGRO <%DAT_END+16 %DAT_END+20> = M();
N16NI_US_SOLA_ADDGRO <%DAT_END+16 %DAT_END+16> = -0.2;
// -------------------------

SMOOTH N16NI_US_SOLA_ADDGRO = N16NI_US_SOLA_ADDGRO LINEAR;

// EXTEND HISTORY USING GROWTH RATE
N16NI_US_SOLA_GRO = PCH(N16NI_US_SOLA) + N16NI_US_SOLA_ADDGRO;
N16NI_US_SOLA <%DAT_END+1 %BNK_END> %= N16NI_US_SOLA_GRO;

// PRINT RESULTS
PRT <%CURR_YR-2 %CURR_YR+3> N16NI_US_SOLA_GRO, N16NI_US_SOLA_ADDGRO, PCH(N16NI_US_SOLA), N16NI_US;
PRT %N16_US_SOLA_ADDLEV;

// INTERPOLATE ANNUAL DATA TO QUARTERLY
N16NI_US_SOLQ!Q = INTERP_QA_LIN(N16NI_US_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3> N16NI_US_SOLQ!Q, N16NI_US_SOLA, N16_US;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> N16_US/1000<DASHTYPE='1' LINECOLOR='blue'>, N16NI_US_SOLA<DASHTYPE='2' LINECOLOR='red'>, N16_US_SOLA<DASHTYPE='2' LINECOLOR='black'> FILE='{%WORK_DIR}\FIG\N16_US_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*N16*!*;
DELETE %N16_US_SOLA_ADDLEV, N16NI_US_SOLA_GRO, N16NI_US_SOLA_ADDGRO;



TELL '*************************';
TELL ' LABOR FORCE             ';
TELL '*************************';

// THIS SECTION CONTAINS THREE STAGES: 
// 1. ESTABLISH APPROXIMATE LFP AND LF PATHS AT THE ANNUAL FREQUENCY, 
// 2. ADDFACTOR LF AT THE QUARTERLY FREQUENCY,
// 3. RECALCULATE LFP WITH ADDFACTORED LF


// STAGE 1.


// THE LFP IMPLIED BY N16NI_US_SOLA IS
LFP_US_SOLA = LF_US/N16NI_US_SOLA*100;  // CALCULATE LFP ESTIMATE
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_US_SOLA, LFP_US, LFP_US_SOLA-LFP_US; // COMPARE THE CALCULATED LFP TO ACTUAL LFP HISTORY
// COMPARE TO HTTP://DATA.BLS.GOV/TIMESERIES/LNS11300000
// THE LFP_US_A NUMBERS SHOULD EQUAL TO THE ANNUAL AVERAGES AT THE LINK ABOVE

// USE LABOR FORCE PARTICIPATION RATES FROM: 
// HTTPS://WWW.BLS.GOV/SPOTLIGHT/2016/A-LOOK-AT-THE-FUTURE-OF-THE-US-LABOR-FORCE-TO-2060/HOME.HTM
// ADDITIONAL INFO:
// HTTPS://WWW.BLS.GOV/OPUB/MLR/2017/ARTICLE/PROJECTIONS-OVERVIEW-AND-HIGHLIGHTS-2016-26.HTM
// HTTPS://WWW.FRBSF.ORG/ECONOMIC-RESEARCH/PUBLICATIONS/ECONOMIC-LETTER/2018/NOVEMBER/US-LABOR-FORCE-PARTICIPATION-RATE-TREND-PROJECTION/

// -------------------------
// CALCULATE LFP RATES BASED ON THESE BLS STUDIES AND APPLY ADD FACTORS TO BRING LFP IN LINE WITH THE MORE RECENT STUDY: HTTPS://WWW.BLS.GOV/SPOTLIGHT/2016/A-LOOK-AT-THE-FUTURE-OF-THE-US-LABOR-FORCE-TO-2060/PDF/A-LOOK-AT-THE-FUTURE-OF-THE-US-LABOR-FORCE-TO-2060.PDF
// HTTPS://WWW.BLS.GOV/OPUB/MLR/2019/ARTICLE/PROJECTIONS-OVERVIEW-AND-HIGHLIGHTS-2018-28.HTM
// 2018: 62.9%, 2028: 61.2%
// HISTORY: 2016-17: 62.78%, 62.86%
LFP_US_SOLA_BLS <2016 2060> =  62.4,62.2,62.0,61.75,61.5,61.3,61.1,60.85,60.6,60.4,60.2,60.0,59.8,59.6,59.4,59.2,59.0,58.9,58.8,58.6,58.5,58.4,58.4,58.3,58.3,58.2,58.2,58.1,58.1,58.1,58.0,58.0,58.0,57.9,57.9,57.8,57.7,57.6,57.6,57.5,57.4,57.3,57.2,57.1,57.0;
LFP_US_SOLA_BLS_NEW <2016 2018> = 62.78,62.86,62.86;
LFP_US_SOLA_BLS_NEW <2028 2028> = 61.2;
LFP_US_SOLA_BLS_ADD = LFP_US_SOLA_BLS_NEW - LFP_US_SOLA_BLS;
LFP_US_SOLA_BLS_ADD <2029 2060> ^= 0;
// -------------------------

SMOOTH LFP_US_SOLA_BLS_ADD = LFP_US_SOLA_BLS_ADD LINEAR;
%DAT_START = FROMSERIES(LFP_US_SOLA_BLS, 'DATASTART');
%DAT_END = FROMSERIES(LFP_US_SOLA_BLS, 'DATAEND');
LFP_US_SOLA_BLS <%DAT_START %DAT_END> = LFP_US_SOLA_BLS + LFP_US_SOLA_BLS_ADD;

// USE THE ADJUSTED LFP FROM THE BLS TO EXTEND THE IMPLIED LFP
%DAT_END = FROMSERIES(LFP_US_SOLA, 'DATAEND');
LFP_US_SOLA <%DAT_END+1 %BNK_END> %= PCH(LFP_US_SOLA_BLS);
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_US, LFP_US_SOLA_BLS, LFP_US_SOLA;

// USE THE IMPLIED LFP TO EXTEND THE LF HISTORY
%DAT_END = FROMSERIES(LF_US, 'DATAEND');
LF_US_SOLA <%DAT_END+1 %BNK_END> %= PCH(LFP_US_SOLA * N16NI_US_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3 N> LF_US, LF_US_SOLA;

// INTERPOLATE ANNUAL LFP AND LF TO QUARTERLY
LFP_US_SOLQ!Q = INTERP_QA_LIN(LFP_US_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_US_SOLQ!Q, LFP_US!Q, LFP_US_SOLA, LFP_US;
LF_US_SOLQ!Q = INTERP_QA_LIN(LF_US_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3 N> LF_US_SOLQ!Q, LF_US!Q, LF_US_SOLA, LF_US;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LFP_US_SOLQ!Q<DASHTYPE='2' LINECOLOR='black'>, LFP_US!Q<DASHTYPE='1' LINECOLOR='black'>, LFP_US_SOLA<DASHTYPE='2' LINECOLOR='blue'>, LFP_US_SOLA_BLS<DASHTYPE='2' LINECOLOR='red'>, LFP_US<DASHTYPE='1' LINECOLOR='blue'> FILE='{%WORK_DIR}\FIG\LFP_US_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LF_US_SOLQ!Q<DASHTYPE='2' LINECOLOR='black'>, LF_US!Q<DASHTYPE='1' LINECOLOR='black'>, LF_US_SOLA<DASHTYPE='2' LINECOLOR='blue'>, LF_US<DASHTYPE='1' LINECOLOR='blue'> FILE='{%WORK_DIR}\FIG\LF_US_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*LFP*!*;
DELETE LFP_US_SOLA_BLS_ADD, LFP_US_SOLA_BLS_NEW, LFP_US_SOLA_BLS;


// STAGE 2.


OPTION FREQ=Q;

// ADDFACTOR FOR LEVEL (TRANSITION FROM HISTORY TO FORECAST)
// FIND THE LAST VALUE IN HISTORY, CREATE AN ADDFACTOR WITH THE DIFFERENCE AND ADJUST LEVEL
%DAT_END = FROMSERIES(LF_US, 'DATAEND');
%LF_US_SOLQ_ADDLEV = LF_US[%DAT_END] - LF_US_SOLQ[%DAT_END];
LF_US_SOLQ <%DAT_END %BNK_END> = LF_US_SOLQ + %LF_US_SOLQ_ADDLEV;

// COMPARE GROWTH RATES IN HISTORY AND FORECAST
PRT <%CURR_YR-2 %CURR_YR+3> LF_US, LF_US_SOLQ;

// -------------------------
// ADDFACTOR FOR GROWTH
LF_US_SOLQ_ADDGRO = 0;
LF_US_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+15> = M();
LF_US_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+6> = 0, 0.2, 0.4, 0.8, 1.6, 2;
// LF_US_SOLQ_ADDGRO <%DAT_END+10 %DAT_END+10> = 0;
// -------------------------

SMOOTH LF_US_SOLQ_ADDGRO = LF_US_SOLQ_ADDGRO LINEAR;

// EXTEND HISTORY USING GROWTH RATE (FUNCTIONS DEFINED IN LIB.GCM)
LF_US_SOLQ_GRO = PCHA(LF_US_SOLQ)+LF_US_SOLQ_ADDGRO;
LF_US_SOLQ_GRO = PCHA_TO_PCH(LF_US_SOLQ_GRO);
LF_US_SOLQ <%BNK_START %DAT_END> = LF_US;
LF_US_SOLQ <%DAT_END+1 %BNK_END> %= LF_US_SOLQ_GRO;

// PRINT RESULTS
PRT <%CURR_YR-2 %CURR_YR+3> LF_US_SOLQ_GRO, LF_US_SOLQ_ADDGRO, PCHA(LF_US_SOLQ), PCHY(LF_US_SOLQ), LF_US_SOLQ, LF_US;
PRT %LF_US_SOLQ_ADDLEV;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE LF_US_SOLA!A = LF_US_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> LF_US_SOLA!A, LF_US_SOLQ!Q, LF_US!A, LF_US!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LF_US<DASHTYPE='1' LINECOLOR='blue'>, LF_US_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, LF_US!A<DASHTYPE='1' LINECOLOR='red'>, LF_US_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\LF_US_FIG2.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> LF_US!Q<TYPE=LINES DASHTYPE='1'>, LF_US_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(LF_US!Q)<TYPE=BOXES Y2>, PCHA(LF_US_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\LF_US_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*LF*!*;
DELETE %LF_US_SOLQ_ADDLEV, LF_US_SOLQ_GRO, LF_US_SOLQ_ADDGRO;


// STAGE 3.


// CALCULATE LFP IMPLIED BY LF AND N16NI_US_SOLA
LFP_US_SOLQ_IMP = LF_US_SOLQ/N16NI_US_SOLQ*100;  
// USE THE IMPLIED LFP EXTEND HISTORY
%DAT_END = FROMSERIES(LFP_US, 'DATAEND');
LFP_US_SOLQ <%BNK_START %DAT_END> = LFP_US;
LFP_US_SOLQ <%DAT_END+1 %BNK_END> %= PCH(LFP_US_SOLQ_IMP);
// COMPARE THE IMPLIED AND ACTUAL LFP
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_US_SOLQ_IMP, LFP_US_SOLQ, LFP_US, LFP_US_SOLQ-LFP_US; 

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE LFP_US_SOLA!A = LFP_US_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_US_SOLA!A, LFP_US_SOLQ!Q, LFP_US!A, LFP_US!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LFP_US<DASHTYPE='1' LINECOLOR='blue'>, LFP_US_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, LFP_US!A<DASHTYPE='1' LINECOLOR='red'>, LFP_US_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\LFP_US_FIG2.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*LFP*!*;
DELETE LFP_US_SOLQ_IMP;



TELL '*************************';
TELL ' UNEMPLOYMENT RATE AND EMPLOYMENT';
TELL '*************************';

// -------------------------
// SHORT RUN ASSUMPTION
UR_US_SOLQ <2020Q3 2021Q4> = 11, 9.5, 8.0, 7, 6.5, 6;
// LONG RUN = NAIRU
UR_US_SOLQ <2025 %BNK_END> = 4.3;
// -------------------------

SMOOTH UR_US_SOLQ = UR_US_SOLQ LINEAR;

// EMPLOYMENT FORECAST
%DAT_END = FROMSERIES(EMPL_US, 'DATAEND');
EMPL_US_SOLQ <%DAT_END+1 %BNK_END> = (1-UR_US_SOLQ/100)*LF_US_SOLQ;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE UR_US_SOLA!A = UR_US_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3 N> UR_US_SOLA!A, UR_US_SOLQ!Q, UR_US!A, UR_US!Q;
COLLAPSE EMPL_US_SOLA!A = EMPL_US_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> EMPL_US_SOLA!A, EMPL_US_SOLQ!Q, EMPL_US!A, EMPL_US!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> UR_US<DASHTYPE='1' LINECOLOR='blue'>, UR_US_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, UR_US!A<DASHTYPE='1' LINECOLOR='red'>, UR_US_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\UR_US_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> EMPL_US<DASHTYPE='1' LINECOLOR='blue'>, EMPL_US_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, EMPL_US!A<DASHTYPE='1' LINECOLOR='red'>, EMPL_US_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\EMPL_US_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> EMPL_US!Q<TYPE=LINES DASHTYPE='1'>, EMPL_US_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(EMPL_US!Q)<TYPE=BOXES Y2>, PCHA(EMPL_US_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\EMPL_US_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*UR*!*, *:*EMPL*!*;



TELL '*************************';
TELL ' PRODUCTIVITY AND GDP    ';
TELL '*************************';

// DEFINE PRODUCTIVITY
PROD_US = GDP_R_US / EMPL_US;
PROD_US_SOLQ = PROD_US;
// MOVING AVERAGES OF 10 AND 20 YEAR ANNUAL PRODUCTIVITY GROWTH
PRT <%CURR_YR-10 %CURR_YR N> PCHA(PROD_US), (EXP((LOG(PROD_US)-LAG(LOG(PROD_US),40))/10)-1)*100, (EXP((LOG(PROD_US)-LAG(LOG(PROD_US),80))/20)-1)*100;

// -------------------------
// SHORT (AND LONG) RUN ASSUMPTION
PROD_US_SOLQ_GRO = PCHA(PROD_US_SOLQ);
// PROD_US_SOLQ_GRO <2020Q2 %BNK_END> = 11, 1.2, 1.2, 1.2, 1.2, 1.5, 1.6, 1.6, 1.5, 1.4, 1.3, 1.2 REP *;
PROD_US_SOLQ_GRO <2020Q3 %BNK_END> = -2.2, -1.2, -0.8, 0, 0.6, 1.2, 1.2, 1.2, 1.2, 1.2, 1.2 REP *;
PROD_US_SOLQ_GRO <%BNK_END %BNK_END> = 1.2;
// -------------------------

SMOOTH PROD_US_SOLQ_GRO = PROD_US_SOLQ_GRO LINEAR;

// GDP FORECAST
%DAT_END = FROMSERIES(GDP_R_US, 'DATAEND');
PROD_US_SOLQ_GRO = PCHA_TO_PCH(PROD_US_SOLQ_GRO);
PROD_US_SOLQ <%DAT_END+1 %BNK_END> %= PROD_US_SOLQ_GRO;
GDP_R_US_SOLQ <%DAT_END+1 %BNK_END> = PROD_US_SOLQ * EMPL_US_SOLQ;

// GDP PER CAPITA FORECAST
%DAT_END = FROMSERIES(GDPPC_R_US, 'DATAEND');
GDPPC_R_US_SOLQ <%DAT_END+1 %BNK_END LABEL=''> = GDP_R_US_SOLQ / N_US_SOLQ * 1000 * 1000;
DOC GDPPC_R_US_SOLQ LABEL='REAL PER CAPITA GDP, US (SEAS.ADJ.)';

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE GDP_R_US_SOLA!A = GDP_R_US_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> GDP_R_US_SOLA!A, GDP_R_US_SOLQ!Q, GDP_R_US!A, GDP_R_US!Q;

OPTION FREQ=A;

// ANNUAL HISTORICAL PRODUCTIVITY
PROD_US = GDP_R_US/EMPL_US;
PROD_US_SOLA = PROD_US;
// ANNUAL PRODUCTIVITY FORECAST
%DAT_END = FROMSERIES(GDP_R_US, 'DATAEND');
PROD_US_SOLA <%DAT_END+1 %BNK_END> = GDP_R_US_SOLA/EMPL_US_SOLA;
// ANNUAL GDPPC FORECAST
GDPPC_R_US_SOLA <%DAT_END+1 %BNK_END> = GDP_R_US_SOLA / N_US_SOLA * 1000 * 1000;
DOC GDPPC_R_US_SOLA LABEL='REAL PER CAPITA GDP, US (SEAS.ADJ.)';

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> PROD_US!Q<DASHTYPE='1' LINECOLOR='blue'>, PROD_US_SOLQ!Q<DASHTYPE='2' LINECOLOR='blue'>, PROD_US!A<DASHTYPE='1' LINECOLOR='red'>, PROD_US_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\PROD_US_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> GDP_R_US!Q<DASHTYPE='1' LINECOLOR='blue'>, GDP_R_US_SOLQ!Q<DASHTYPE='2' LINECOLOR='blue'>, GDP_R_US!A<DASHTYPE='1' LINECOLOR='red'>, GDP_R_US_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\GDP_R_US_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> GDP_R_US!Q<TYPE=LINES DASHTYPE='1'>, GDP_R_US_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(GDP_R_US!Q)<TYPE=BOXES Y2>, PCHA(GDP_R_US_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\GDP_R_US_GR_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15> GDPPC_R_US!Q<TYPE=LINES DASHTYPE='1'>, GDPPC_R_US_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(GDPPC_R_US!Q)<TYPE=BOXES Y2>, PCHA(GDPPC_R_US_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\GDPPC_R_US_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*PROD*!*, *:*GDP*!*;
DELETE PROD_US_SOLQ_GRO!Q;



TELL '*************************';
TELL ' CPI                     ';
TELL '*************************';

OPTION FREQ=Q;

// -------------------------
// SHORT (AND LONG) RUN ASSUMPTION
CPI_US_SOLQ_GRO <2020Q3 2020Q4> = 0, 0.5;
CPI_US_SOLQ_GRO <2025Q1 %BNK_END> = 2.0;
// -------------------------

SMOOTH CPI_US_SOLQ_GRO = CPI_US_SOLQ_GRO LINEAR;

// CPI FORECAST
%DAT_END = FROMSERIES(CPI_US, 'DATAEND');
CPI_US_SOLQ_GRO = PCHA_TO_PCH(CPI_US_SOLQ_GRO);
CPI_US_SOLQ <%DAT_END+1 %BNK_END> %= CPI_US_SOLQ_GRO;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE CPI_US_SOLA!A = CPI_US_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> CPI_US_SOLA!A<P>, PCHA(CPI_US_SOLQ!Q)<N>, CPI_US!A<P>, PCHA(CPI_US!Q)<N>;


// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> PCHA(CPI_US!Q)<DASHTYPE='1' LINECOLOR='blue'>, PCHA(CPI_US_SOLQ!Q)<DASHTYPE='2' LINECOLOR='blue'>, CPI_US!A<DASHTYPE='1' LINECOLOR='red' P>, CPI_US_SOLA!A<DASHTYPE='2' LINECOLOR='red' P> FILE='{%WORK_DIR}\FIG\CPI_US_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> CPI_US!Q<TYPE=LINES DASHTYPE='1'>, CPI_US_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(CPI_US!Q)<TYPE=BOXES Y2>, PCHA(CPI_US_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\CPI_US_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*CPI*!*;
DELETE CPI_US_SOLQ_GRO!Q;



TELL '*************************';
TELL '*************************';
TELL ' JP FORECAST             ';
TELL '*************************';
TELL '*************************';



TELL '*************************';
TELL ' POPULATION              ';
TELL '*************************';

OPTION FREQ=A;

// INTERPOLATE ANNUAL DATA TO QUARTERLY (FIND A SOURCE AND LOAD INTO UDAMAN!!!)
N_JP!Q = INTERP_QA_LIN(N_JP);
DOC N_JP!Q LABEL=N_JP!A.FROMSERIES('LABEL');
N_JP_SOLQ!Q = N_JP!Q;
DOC N_JP_SOLQ!Q LABEL=N_JP!A.FROMSERIES('LABEL');
PRT <%CURR_YR-2 %CURR_YR+3> N_JP!Q, N_JP, N_JP_SOLQ!Q, N_JP_SOLA;

// USE POPULATION ESTIMATES AND PROJECTIONS FROM THE UN
// UN WORLD POPULATION PROSPECTS 2019 -- MEDIUM VARIANT HTTPS://POPULATION.UN.ORG/WPP/DOWNLOAD/STANDARD/INTERPOLATED/WPP2019_INT_F03_1_POPULATION_BY_AGE_ANNUAL_BOTH_SEXES.XLSX

// -------------------------
// FILL SERIES WITH UN PROJECTIONS OF TOTAL POP
NUN_JP_SOLA <1950 2060> = 82802,84316,85659,86870,87981,89018,90004,90954,91878,92782,93674,94561,95459,96389,97379,98447,99596,100822,102124,103496,104929,106427,107976,109529,111023,112413,113679,114828,115879,116867,117817,118733,119605,120428,121189,121883,122509,123073,123585,124059,124505,124930,125331,125707,126053,126365,126644,126893,127117,127326,127524,127714,127893,128058,128204,128326,128423,128494,128539,128555,128542,128499,128424,128314,128169,127985,127763,127503,127202,126860,126476,126051,125585,125081,124544,123976,123379,122755,122107,121441,120758,120063,119355,118637,117907,117166,116416,115657,114893,114125,113356,112587,111818,111052,110288,109529,108775,108026,107281,106541,105804,105071,104340,103610,102875,102135,101387,100633,99872,99102,98326; 			
// -------------------------

// INTERPOLATE ANNUAL DATA TO QUARTERLY (FUNCTION DEFINED IN LIB.GCM)
NUN_JP_SOLQ!Q = INTERP_QA_LIN(NUN_JP_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3> NUN_JP_SOLQ!Q, NUN_JP_SOLA;

OPTION FREQ=Q;

// ADDFACTOR FOR LEVEL (TRANSITION FROM HISTORY TO FORECAST)
// FIND THE LAST VALUE IN HISTORY, CREATE AN ADDFACTOR WITH THE DIFFERENCE AND ADJUST LEVEL
%DAT_END = FROMSERIES(N_JP, 'DATAEND');
%N_JP_SOLQ_ADDLEV = N_JP[%DAT_END] - NUN_JP_SOLQ[%DAT_END];
N_JP_SOLQ <%DAT_END %BNK_END> = NUN_JP_SOLQ + %N_JP_SOLQ_ADDLEV;

// COMPARE GROWTH RATES IN HISTORY AND FORECAST
PRT <%CURR_YR-2 %CURR_YR+3> N_JP, N_JP_SOLQ;

// -------------------------
// ADDFACTOR FOR GROWTH
N_JP_SOLQ_ADDGRO = 0;
N_JP_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+80> = M();
N_JP_SOLQ_ADDGRO <%DAT_END+20 %DAT_END+20> = 0.1;
N_JP_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+4> = -0.2;
// -------------------------

SMOOTH N_JP_SOLQ_ADDGRO = N_JP_SOLQ_ADDGRO LINEAR;

// EXTEND HISTORY USING GROWTH RATE (FUNCTIONS DEFINED IN LIB.GCM)
N_JP_SOLQ_GRO = PCHA(N_JP_SOLQ)+N_JP_SOLQ_ADDGRO;
N_JP_SOLQ_GRO = PCHA_TO_PCH(N_JP_SOLQ_GRO);
N_JP_SOLQ <%DAT_END+1 %BNK_END> %= N_JP_SOLQ_GRO;

// PRINT RESULTS
PRT <%CURR_YR-2 %CURR_YR+3> N_JP_SOLQ_GRO, N_JP_SOLQ_ADDGRO, PCHA(N_JP_SOLQ), PCHY(N_JP_SOLQ), N_JP_SOLQ, NUN_JP_SOLQ!Q;
PRT %N_JP_SOLQ_ADDLEV;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE N_JP_SOLA!A = N_JP_SOLQ!Q AVG; // FOR STOCK TYPE VARIABLES AVG, FOR FLOW TYPE VARIABLES TOTAL
PRT <%CURR_YR-2 %CURR_YR+3> N_JP_SOLA!A, N_JP_SOLQ!Q, N_JP!A, N_JP!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> N_JP<DASHTYPE='1' LINECOLOR='blue'>, N_JP_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, N_JP!A<DASHTYPE='1' LINECOLOR='red'>, N_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\N_JP_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> N_JP!Q<TYPE=LINES DASHTYPE='1'>, N_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(N_JP!Q)<TYPE=BOXES Y2>, PCHA(N_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\N_JP_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*N*!*;
DELETE %N_JP_SOLQ_ADDLEV, N_JP_SOLQ_GRO, N_JP_SOLQ_ADDGRO;



TELL '*************************';
TELL ' 15+ POPULATION          ';
TELL '*************************';

OPTION FREQ=A;

// USE POPULATION ESTIMATES AND PROJECTIONS FROM THE UN
// UN WORLD POPULATION PROSPECTS 2019 -- MEDIUM VARIANT HTTPS://POPULATION.UN.ORG/WPP/DOWNLOAD/STANDARD/INTERPOLATED/WPP2019_INT_F03_1_POPULATION_BY_AGE_ANNUAL_BOTH_SEXES.XLSX

// -------------------------
// FILL SERIES WITH UN PROJECTIONS OF 15+ POP
NUN15_JP_SOLA <1950 2060> = 53514,54664,55892,57021,58062,59100,60365,61517,62675,63936,65324,66751,68274,69862,71447,72983,74362,75759,77127,78423,79627,80847,81941,82943,83938,84976,85841,86857,87958,89031,90031,91263,92308,93273,94318,95505,96584,97817,99129,100382,101503,102541,103476,104313,105094,105836,106511,107113,107661,108178,108671,109094,109519,109926,110284,110579,110846,111036,111170,111278,111376,111401,111417,111421,111402,111361,111264,111164,111052,110910,110732,110548,110296,110000,109692,109383,109001,108619,108225,107796,107322,106783,106205,105592,104956,104305,103610,102899,102178,101450,100721,99975,99227,98480,97744,97024,96295,95580,94881,94202,93540,92868,92209,91563,90927,90298,89646,88993,88340,87687,87035; 			
// -------------------------

// INITIALIZE N15_JP_SOLA AND ADDFACTOR IT AFTER %DAT_END
N15_JP_SOLA = NUN15_JP_SOLA;
%DAT_END = FROMSERIES(N_JP, 'DATAEND');

// -------------------------
// ADDFACTOR FOR GROWTH (DELAYED RESPONSE 15 YEARS AFTER COVID)
N15_JP_SOLA_ADDGRO = 0;
N15_JP_SOLA_ADDGRO <%DAT_END+15 %DAT_END+20> = M();
N15_JP_SOLA_ADDGRO <%DAT_END+15 %DAT_END+15> = -0.1;
// -------------------------

SMOOTH N15_JP_SOLA_ADDGRO = N15_JP_SOLA_ADDGRO LINEAR;

// EXTEND HISTORY USING GROWTH RATE (FUNCTIONS DEFINED IN LIB.GCM)
N15_JP_SOLA_GRO = PCH(NUN15_JP_SOLA)+N15_JP_SOLA_ADDGRO;
N15_JP_SOLA <%DAT_END+1 %BNK_END> %= N15_JP_SOLA_GRO;

// INTERPOLATE ANNUAL N15_JP_SOLA TO QUARTERLY
N15_JP_SOLQ!Q = INTERP_QA_LIN(N15_JP_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3> N15_JP_SOLA!A, N15_JP_SOLQ!Q, N_JP_SOLA!A, N_JP_SOLQ!Q, N_JP!A, N_JP!Q;



TELL '*************************';
TELL ' LABOR FORCE             ';
TELL '*************************';

// THIS SECTION CONTAINS THREE STAGES: 
// 1. ESTABLISH APPROXIMATE LFP AND LF PATHS AT THE ANNUAL FREQUENCY, 
// 2. ADDFACTOR LF AT THE QUARTERLY FREQUENCY,
// 3. RECALCULATE LFP WITH ADDFACTORED LF


// STAGE 1.


// THE LFP IMPLIED BY N15_JP_SOLA IS
LFP_JP_SOLA_TEMP = LF_JP/N15_JP_SOLA*100;  // CALCULATE LFP ESTIMATE
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_JP_SOLA_TEMP, LFP_JP, LFP_JP_SOLA_TEMP-LFP_JP; // COMPARE THE CALCULATED LFP TO ACTUAL LFP HISTORY

// -------------------------
// THE VALUES BELOW ARE FROM LFP PROJECTION FROM OECD; LOOKING TO 2060: A GLOBAL VISION OF LONG-TERM GROWTH - OECD 2012
// ALSO LOOK AT OECD LONG TERM PROJECTIONS: HTTPS://STATS.OECD.ORG/VIEWHTML.ASPX?DATASETCODE=EO103_LTB&LANG=EN
LFP_JP_SOLA_TEMP <2028 2028> =  58.7+0.5+1.2+0.5;
LFP_JP_SOLA_TEMP <2058 2060> =  57.2+0.9+0.5;
// -------------------------

SMOOTH LFP_JP_SOLA_TEMP = LFP_JP_SOLA_TEMP LINEAR;

// USE THE INTERPOLATED LFP TO EXTEND THE LFP HISTORY
%DAT_END = FROMSERIES(LFP_JP_SOLA, 'DATAEND');
LFP_JP_SOLA <%DAT_END+1 %BNK_END> %= PCH(LFP_JP_SOLA_TEMP);
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_JP, LFP_JP_SOLA_TEMP, LFP_JP_SOLA;

// USE THE IMPLIED LFP TO EXTEND THE LF HISTORY
%DAT_END = FROMSERIES(LF_JP, 'DATAEND');
LF_JP_SOLA <%DAT_END+1 %BNK_END> %= PCH(LFP_JP_SOLA_TEMP * N15_JP_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3 N> LF_JP, LF_JP_SOLA;

// INTERPOLATE ANNUAL LFP AND LF TO QUARTERLY
LFP_JP_SOLQ!Q = INTERP_QA_LIN(LFP_JP_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_JP_SOLQ!Q, LFP_JP!Q, LFP_JP_SOLA, LFP_JP;
LF_JP_SOLQ!Q = INTERP_QA_LIN(LF_JP_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3 N> LF_JP_SOLQ!Q, LF_JP!Q, LF_JP_SOLA, LF_JP;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LFP_JP_SOLQ!Q<DASHTYPE='2' LINECOLOR='black'>, LFP_JP!Q<DASHTYPE='1' LINECOLOR='black'>, LFP_JP_SOLA<DASHTYPE='2' LINECOLOR='blue'>, LFP_JP_SOLA_TEMP<DASHTYPE='2' LINECOLOR='red'>, LFP_JP<DASHTYPE='1' LINECOLOR='blue'> FILE='{%WORK_DIR}\FIG\LFP_JP_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LF_JP_SOLQ!Q<DASHTYPE='2' LINECOLOR='black'>, LF_JP!Q<DASHTYPE='1' LINECOLOR='black'>, LF_JP_SOLA<DASHTYPE='2' LINECOLOR='blue'>, LF_JP<DASHTYPE='1' LINECOLOR='blue'> FILE='{%WORK_DIR}\FIG\LF_JP_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*LFP*!*;
DELETE LFP_JP_SOLA_TEMP;


// STAGE 2.


OPTION FREQ=Q;

// ADDFACTOR FOR LEVEL (TRANSITION FROM HISTORY TO FORECAST)
// FIND THE LAST VALUE IN HISTORY, CREATE AN ADDFACTOR WITH THE DIFFERENCE AND ADJUST LEVEL
%DAT_END = FROMSERIES(LF_JP, 'DATAEND');
%LF_JP_SOLQ_ADDLEV = LF_JP[%DAT_END] - LF_JP_SOLQ[%DAT_END];
LF_JP_SOLQ <%DAT_END %BNK_END> = LF_JP_SOLQ + %LF_JP_SOLQ_ADDLEV;

// COMPARE GROWTH RATES IN HISTORY AND FORECAST
PRT <%CURR_YR-2 %CURR_YR+3> LF_JP, LF_JP_SOLQ;

// -------------------------
// ADDFACTOR FOR GROWTH
LF_JP_SOLQ_ADDGRO = 0;
LF_JP_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+15> = M();
LF_JP_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+5> = -4, 0, 0.2, 0.5, 0.8;
LF_JP_SOLQ_ADDGRO <%DAT_END+12 %DAT_END+12> = 0;
// LF_JP_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+10> = -1.5, -1.2, -0.6, -0.3, -0.1, 0, 0.1, 0.2, 0.4, 0.8;
// -------------------------

SMOOTH LF_JP_SOLQ_ADDGRO = LF_JP_SOLQ_ADDGRO LINEAR;

// EXTEND HISTORY USING GROWTH RATE (FUNCTIONS DEFINED IN LIB.GCM)
LF_JP_SOLQ_GRO = PCHA(LF_JP_SOLQ)+LF_JP_SOLQ_ADDGRO;
LF_JP_SOLQ_GRO = PCHA_TO_PCH(LF_JP_SOLQ_GRO);
LF_JP_SOLQ <%BNK_START %DAT_END> = LF_JP;
LF_JP_SOLQ <%DAT_END+1 %BNK_END> %= LF_JP_SOLQ_GRO;

// PRINT RESULTS
PRT <%CURR_YR-2 %CURR_YR+3> LF_JP_SOLQ_GRO, LF_JP_SOLQ_ADDGRO, PCHA(LF_JP_SOLQ), PCHY(LF_JP_SOLQ), LF_JP_SOLQ, LF_JP;
PRT %LF_JP_SOLQ_ADDLEV;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE LF_JP_SOLA!A = LF_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> LF_JP_SOLA!A, LF_JP_SOLQ!Q, LF_JP!A, LF_JP!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LF_JP<DASHTYPE='1' LINECOLOR='blue'>, LF_JP_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, LF_JP!A<DASHTYPE='1' LINECOLOR='red'>, LF_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\LF_JP_FIG2.pdf';

// PLOT <%CURR_YR-10 %CURR_YR+15> LF_JP!Q<TYPE=LINES DASHTYPE='1'>, LF_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(LF_JP!Q)<TYPE=BOXES Y2>, PCHA(LF_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\LF_JP_GR_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15> LF_JP!Q<TYPE=LINES DASHTYPE='1'>, LF_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(LF_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\LF_JP_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*LF*!*;
DELETE %LF_JP_SOLQ_ADDLEV, LF_JP_SOLQ_GRO, LF_JP_SOLQ_ADDGRO;


// STAGE 3.


// CALCULATE LFP IMPLIED BY LF AND N15_JP_SOLQ
LFP_JP_SOLQ_IMP = LF_JP_SOLQ/N15_JP_SOLQ*100;  
// USE THE IMPLIED LFP EXTEND HISTORY
%DAT_END = FROMSERIES(LFP_JP, 'DATAEND');
LFP_JP_SOLQ <%BNK_START %DAT_END> = LFP_JP;
LFP_JP_SOLQ <%DAT_END+1 %BNK_END> %= PCH(LFP_JP_SOLQ_IMP);
// COMPARE THE IMPLIED AND ACTUAL LFP
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_JP_SOLQ_IMP, LFP_JP_SOLQ, LFP_JP, LFP_JP_SOLQ-LFP_JP; 

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE LFP_JP_SOLA!A = LFP_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_JP_SOLA!A, LFP_JP_SOLQ!Q, LFP_JP!A, LFP_JP!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LFP_JP<DASHTYPE='1' LINECOLOR='blue'>, LFP_JP_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, LFP_JP!A<DASHTYPE='1' LINECOLOR='red'>, LFP_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\LFP_JP_FIG2.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*LFP*!*;
DELETE LFP_JP_SOLQ_IMP;



TELL '*************************';
TELL ' UNEMPLOYMENT RATE AND EMPLOYMENT';
TELL '*************************';

// AGGREGATE TO ANNUAL FREQUENCY (ADD TO UDAMAN EXPORT!!!)
// COLLAPSE UR_JP!A = UR_JP!Q AVG;

// -------------------------
// SHORT RUN ASSUMPTION
// UR_JP_SOLQ <2020Q2 2021Q4> = 4.5, 3.6, 3.4, 3.3, 3.25, 3.225, 3.2;
UR_JP_SOLQ <2020Q2 2021Q4> = 2.7, 2.85, 2.92, 2.95, 2.97, 2.98, 2.985;
// LONG RUN = NAIRU
UR_JP_SOLQ <2024 %BNK_END> = 3.0;
// -------------------------

SMOOTH UR_JP_SOLQ = UR_JP_SOLQ LINEAR;

// EMPLOYMENT FORECAST
%DAT_END = FROMSERIES(EMPL_JP, 'DATAEND');
EMPL_JP_SOLQ <%DAT_END+1 %BNK_END> = (1-UR_JP_SOLQ/100)*LF_JP_SOLQ;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE UR_JP_SOLA!A = UR_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3 N> UR_JP_SOLA!A, UR_JP_SOLQ!Q, UR_JP!A, UR_JP!Q;
COLLAPSE EMPL_JP_SOLA!A = EMPL_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> EMPL_JP_SOLA!A, EMPL_JP_SOLQ!Q, EMPL_JP!A, EMPL_JP!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> UR_JP<DASHTYPE='1' LINECOLOR='blue'>, UR_JP_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, UR_JP!A<DASHTYPE='1' LINECOLOR='red'>, UR_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\UR_JP_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> EMPL_JP<DASHTYPE='1' LINECOLOR='blue'>, EMPL_JP_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, EMPL_JP!A<DASHTYPE='1' LINECOLOR='red'>, EMPL_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\EMPL_JP_FIG.pdf';

// PLOT <%CURR_YR-10 %CURR_YR+15> EMPL_JP!Q<TYPE=LINES DASHTYPE='1'>, EMPL_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(EMPL_JP!Q)<TYPE=BOXES Y2>, PCHA(EMPL_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\EMPL_JP_GR_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15> EMPL_JP!Q<TYPE=LINES DASHTYPE='1'>, EMPL_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(EMPL_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\EMPL_JP_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*UR*!*, *:*EMPL*!*;



TELL '*************************';
TELL ' PRODUCTIVITY AND GDP    ';
TELL '*************************';

// INTERPOLATE ANNUAL DATA TO QUARTERLY (FIND A SOURCE AND LOAD INTO UDAMAN!!!)
GDPPC_R_JP!Q = INTERP_QA_LIN(GDPPC_R_JP);
DOC GDPPC_R_JP!Q LABEL=GDPPC_R_JP!A.FROMSERIES('LABEL');
GDPPC_R_JP_SOLQ!Q = GDPPC_R_JP!Q;
DOC GDPPC_R_JP_SOLQ!Q LABEL=GDPPC_R_JP!A.FROMSERIES('LABEL');
PRT <%CURR_YR-2 %CURR_YR+3> GDPPC_R_JP!Q, GDPPC_R_JP!A, GDPPC_R_JP_SOLQ!Q, GDPPC_R_JP_SOLA!A;

// DEFINE PRODUCTIVITY
PROD_JP = GDP_R_JP / EMPL_JP;
PROD_JP_SOLQ = PROD_JP;
// MOVING AVERAGES OF 10 AND 20 YEAR ANNUAL PRODUCTIVITY GROWTH
PRT <%CURR_YR-10 %CURR_YR N> PCHA(PROD_JP), (EXP((LOG(PROD_JP)-LAG(LOG(PROD_JP),40))/10)-1)*100, (EXP((LOG(PROD_JP)-LAG(LOG(PROD_JP),80))/20)-1)*100;

// -------------------------
// SHORT (AND LONG) RUN ASSUMPTION
PROD_JP_SOLQ_GRO = PCHA(PROD_JP_SOLQ);
PROD_JP_SOLQ_GRO <2020Q2 2021Q4> = -8.5, 2.0, 3, 4, 3, 2.5, 2;
PROD_JP_SOLQ_GRO <2025Q4 %BNK_END> = 1.1 REP *;
// -------------------------

SMOOTH PROD_JP_SOLQ_GRO = PROD_JP_SOLQ_GRO LINEAR;

// GDP FORECAST
%DAT_END = FROMSERIES(GDP_R_JP, 'DATAEND');
PROD_JP_SOLQ_GRO = PCHA_TO_PCH(PROD_JP_SOLQ_GRO);
PROD_JP_SOLQ <%DAT_END+1 %BNK_END> %= PROD_JP_SOLQ_GRO;
GDP_R_JP_SOLQ <%DAT_END+1 %BNK_END> = PROD_JP_SOLQ * EMPL_JP_SOLQ;

// GDP PER CAPITA FORECAST
%DAT_END = FROMSERIES(GDPPC_R_JP, 'DATAEND');
GDPPC_R_JP_SOLQ <%DAT_END+1 %BNK_END> = GDP_R_JP_SOLQ / N_JP_SOLQ * 1000;
DOC GDPPC_R_JP_SOLQ LABEL='REAL PER CAPITA GDP, JAPAN (SEAS.ADJ.)';

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE GDP_R_JP_SOLA!A = GDP_R_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> GDP_R_JP_SOLA!A, GDP_R_JP_SOLQ!Q, GDP_R_JP!A, GDP_R_JP!Q;

OPTION FREQ=A;

// ANNUAL HISTORICAL PRODUCTIVITY
PROD_JP = GDP_R_JP/EMPL_JP;
PROD_JP_SOLA = PROD_JP;
// ANNUAL PRODUCTIVITY FORECAST
%DAT_END = FROMSERIES(GDP_R_JP, 'DATAEND');
PROD_JP_SOLA <%DAT_END+1 %BNK_END> = GDP_R_JP_SOLA/EMPL_JP_SOLA;
// ANNUAL GDPPC FORECAST
GDPPC_R_JP_SOLA <%DAT_END+1 %BNK_END> = GDP_R_JP_SOLA / N_JP_SOLA * 1000;
DOC GDPPC_R_JP_SOLA LABEL='REAL PER CAPITA GDP, JAPAN (SEAS.ADJ.)';

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> PROD_JP!Q<DASHTYPE='1' LINECOLOR='blue'>, PROD_JP_SOLQ!Q<DASHTYPE='2' LINECOLOR='blue'>, PROD_JP!A<DASHTYPE='1' LINECOLOR='red'>, PROD_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\PROD_JP_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> GDP_R_JP!Q<DASHTYPE='1' LINECOLOR='blue'>, GDP_R_JP_SOLQ!Q<DASHTYPE='2' LINECOLOR='blue'>, GDP_R_JP!A<DASHTYPE='1' LINECOLOR='red'>, GDP_R_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\GDP_R_JP_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> GDP_R_JP!Q<TYPE=LINES DASHTYPE='1'>, GDP_R_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(GDP_R_JP!Q)<TYPE=BOXES Y2>, PCHA(GDP_R_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\GDP_R_JP_GR_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15> GDPPC_R_JP!Q<TYPE=LINES DASHTYPE='1'>, GDPPC_R_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(GDPPC_R_JP!Q)<TYPE=BOXES Y2>, PCHA(GDPPC_R_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\GDPPC_R_JP_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*PROD*!*, *:*GDP*!*;
DELETE PROD_JP_SOLQ_GRO!Q;



TELL '*************************';
TELL ' CPI                     ';
TELL '*************************';

OPTION FREQ=Q;

// -------------------------
// SHORT (AND LONG) RUN ASSUMPTION
// CPI_JP_SOLQ_GRO <2020Q2 2021Q2> = -0.5, -0.2, 0.1, 0.2, 0.3;
CPI_JP_SOLQ_GRO <2020Q3 2021Q2> = -0.2, 0.1, 0.2, 0.3;
CPI_JP_SOLQ_GRO <2023Q4 %BNK_END> = 1.0;
// -------------------------

SMOOTH CPI_JP_SOLQ_GRO = CPI_JP_SOLQ_GRO LINEAR;

// CPI FORECAST
%DAT_END = FROMSERIES(CPI_JP, 'DATAEND');
CPI_JP_SOLQ_GRO = PCHA_TO_PCH(CPI_JP_SOLQ_GRO);
CPI_JP_SOLQ <%DAT_END+1 %BNK_END> %= CPI_JP_SOLQ_GRO;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE CPI_JP_SOLA!A = CPI_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> CPI_JP_SOLA!A<P>, PCHA(CPI_JP_SOLQ!Q)<N>, CPI_JP!A<P>, PCHA(CPI_JP!Q)<N>;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> PCHA(CPI_JP!Q)<DASHTYPE='1' LINECOLOR='blue'>, PCHA(CPI_JP_SOLQ!Q)<DASHTYPE='2' LINECOLOR='blue'>, CPI_JP!A<DASHTYPE='1' LINECOLOR='red' P>, CPI_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red' P> FILE='{%WORK_DIR}\FIG\CPI_JP_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> CPI_JP!Q<TYPE=LINES DASHTYPE='1'>, CPI_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(CPI_JP!Q)<TYPE=BOXES Y2>, PCHA(CPI_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\CPI_JP_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*CPI*!*;
DELETE CPI_JP_SOLQ_GRO!Q;



TELL '*************************';
TELL ' EXCHANGE RATE           ';
TELL '*************************';

// AGGREGATE TO ANNUAL FREQUENCY (ADD TO UDAMAN EXPORT!!!)
// COLLAPSE YXR_R_JP!A = YXR_R_JP!Q AVG;

OPTION FREQ=Q;

// REBASE US AND JP CPI TO THE SAME BASEYEAR
REBASE <PREFIX=REB_> CPI_US_SOLQ, CPI_JP_SOLQ %BASEYEAR;

// -------------------------
// SHORT RUN ASSUMPTION
// NOMINAL EXCHANGE RATE BASED ON JUDGMENT (ADDFACTOR)
YXR_JP_SOLQ <2020Q3 2020Q4> = 108, 108;
// -------------------------

// CALCULATE THE REAL EXCHANGE RATE
YXR_R_JP_SOLQ = YXR_JP_SOLQ * (REB_CPI_US_SOLQ) / (REB_CPI_JP_SOLQ);

// -------------------------
// LONG RUN ASSUMPTION
// REAL EXCHANGE RATE BASED ON JUDGEMENT (ADDFACTOR)
YXR_R_JP_SOLQ <2023Q1 %BNK_END> = 130;
// -------------------------

SMOOTH YXR_R_JP_SOLQ = YXR_R_JP_SOLQ LINEAR;

// CALCULATE THE NOMINAL EXCHANGE RATE
%DAT_END = FROMSERIES(YXR_JP, 'DATAEND');
YXR_JP_SOLQ <%DAT_END+1 %BNK_END> = YXR_R_JP_SOLQ / (REB_CPI_US_SOLQ) * (REB_CPI_JP_SOLQ);

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE YXR_JP_SOLA!A = YXR_JP_SOLQ!Q AVG;
COLLAPSE YXR_R_JP_SOLA!A = YXR_R_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> YXR_JP_SOLA!A<P>, PCHA(YXR_JP_SOLQ!Q)<N>, YXR_JP!A<P>, PCHA(YXR_JP!Q)<N>;
PRT <%CURR_YR-2 %CURR_YR+3> YXR_R_JP_SOLA!A<P>, PCHA(YXR_R_JP_SOLQ!Q)<N>, YXR_R_JP!A<P>, PCHA(YXR_R_JP!Q)<N>;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> PCHA(YXR_JP!Q)<DASHTYPE='1' LINECOLOR='blue'>, PCHA(YXR_JP_SOLQ!Q)<DASHTYPE='2' LINECOLOR='blue'>, YXR_JP!A<DASHTYPE='1' LINECOLOR='red' P>, YXR_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red' P> FILE='{%WORK_DIR}\FIG\CPI_JP_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> YXR_JP!Q<TYPE=LINES DASHTYPE='1'>, YXR_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(YXR_JP!Q)<TYPE=BOXES Y2>, PCHA(YXR_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\CPI_JP_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*YXR*!*;
INDEX *:*CPI*!*;
DELETE REB_CPI_US_SOLQ!Q, REB_CPI_JP_SOLQ!Q;



TELL '*************************';
TELL ' SAVE                    ';
TELL '*************************';

INDEX *!* TO #EXT_LIST;
WRITE {#EXT_LIST} FILE=EXT_DAT;
EXPORT <ALL TSD> {#EXT_LIST} FILE=EXT_DAT;

// EXPORT DATA FOR FORECAST SNAPSHOTS
// REPLACE _US WITH @US IN THE TSD FILES
#EXTQ = N_US, LFP_US, LF_US, UR_US, EMPL_US, GDP_R_US, GDPPC_R_US, CPI_US, N_JP, LFP_JP, LF_JP, UR_JP, EMPL_JP, GDP_R_JP, GDPPC_R_JP, CPI_JP, YXR_JP, YXR_R_JP;
#EXTA = N_US, LFP_US, LF_US, UR_US, EMPL_US, GDP_R_US, GDPPC_R_US, CPI_US, N_JP, LFP_JP, LF_JP, UR_JP, EMPL_JP, GDP_R_JP, GDPPC_R_JP, CPI_JP, YXR_JP, YXR_R_JP;

// #EXTQ = N_US, LFP_US, LF_US, UR_US, EMPL_US, GDP_R_US, CPI_US, LF_JP, UR_JP, EMPL_JP, GDP_R_JP, CPI_JP, YXR_JP, YXR_R_JP;
// #EXTA = N_US, LFP_US, LF_US, UR_US, EMPL_US, GDP_R_US, GDPPC_R_US, CPI_US, N_JP, LFP_JP, LF_JP, UR_JP, EMPL_JP, GDP_R_JP, GDPPC_R_JP, CPI_JP, YXR_JP, YXR_R_JP;

EXPORT <2008 2035 TSD> {#EXTQ}_SOLQ FILE=EXT_DAT_QF;
EXPORT <2008 2035 TSD> {#EXTQ} FILE=EXT_DAT_QH;
EXPORT <TSD> {#EXTQ}_SOLQ FILE=EXT_DAT_QF_ARE;

OPTION FREQ=A;

EXPORT <1980 2050 TSD> {#EXTA}_SOLA FILE=EXT_DAT_AF;
EXPORT <1980 2050 TSD> {#EXTA} FILE=EXT_DAT_AH;
EXPORT <TSD> {#EXTA}_SOLA FILE=EXT_DAT_AF_ARE;

IF (%SAVESCREEN=='Y');  
PIPE <STOP>;
END;
