// *************************
// FORECAST FOR THE JP ECONOMY
// AUTHOR: PETER FULEKY
// DATE: 2020-06-10
// NOTES:
// ALL GROWTH RATE ENTRIES ARE IN ANNUALIZED TERMS. 
// THEY ARE HANDLED BY FUNCTIONS IN LIB.GCM
// USER INPUT IS REQUIRED IN SECTIONS DELIMITED BY // -------------------------
// COPY/PASTE THE WHOLE SCRIPT TO THE THE COMMAND LINE OR
// RUN THE WHOLE SCRIPT FROM THE COMMAND LINE USING RUN JPSOL.GCM;
// *************************



TELL '*************************';
TELL ' SETUP                   ';
TELL '*************************';

// SET FONT SIZE IN GEKKO
OPTION INTERFACE ZOOM = 120;
// CLOSE BANKS AND CLEAR MEMORY AND SCREEN
RESTART;
CUT;
CLS;
// SET WORKING DIRECTORY, AND SUBFOLDERS 
// (IF YOU USE SINGLE QUOTES, HAVE TO PROVIDE ABSOLUTE PATH)
%WORK_DIR = 'I:\FORECAST\GEKKO';
OPTION FOLDER WORKING = %WORK_DIR;
OPTION FOLDER COMMAND =  '{%WORK_DIR}\CMD';
OPTION FOLDER BANK = '{%WORK_DIR}\DAT';
OPTION FOLDER PIPE = %WORK_DIR;
%SAVESCREEN = 'N';
// USE BBEDIT AS THE OUTPUT WINDOW
IF (%SAVESCREEN=='Y');  
PIPE '{%WORK_DIR}\JPSOL_OUT.TXT';
END;
// WILL DO MOSTLY DATA MANIPULATION
MODE DATA;

// LOAD FUNCTIONS
RUN LIB.GCM;

// SET UP PERIODS ETC.
%BNK_START = 1900;
%BNK_END = 2060;
%CURR_YR = CURRENTYEAR();
TIME %BNK_START %BNK_END;

// LOAD RELEVANT DATA (REPLACE @ WITH _ IN TSD FILES)
#TSD_LIST = ('JP_Q', 'JP_A');
FOR STRING %TSD_I = #TSD_LIST;
IMPORT <ALL TSD> '\DAT\{%TSD_I}.TSD';
END;

// MAKE COPIES OF LOADED SERIES FOR STORING HISTORY (CLONE) AND FORECASTS (_SOL*)
// INDEX ALL SERIES AND SAVE DATA IN THE BANK EXT_DAT.GBK
// CLONE;
COPY *!A TO *_SOLA!A;
COPY *!Q TO *_SOLQ!Q;
INDEX *:*!* TO #EXT_LIST;
// DISP {#EXT_LIST};
WRITE {#EXT_LIST} FILE=EXT_JP_DAT;



TELL '*************************';
TELL ' POPULATION              ';
TELL '*************************';

OPTION FREQ=A;

// USE POPULATION ESTIMATES AND PROJECTIONS FROM THE UN
// UN WORLD POPULATION PROSPECTS 2019 -- MEDIUM VARIANT HTTPS://POPULATION.UN.ORG/WPP/DOWNLOAD/STANDARD/INTERPOLATED/WPP2019_INT_F03_1_POPULATION_BY_AGE_ANNUAL_BOTH_SEXES.XLSX

// -------------------------
// FILL SERIES WITH UN PROJECTIONS OF TOTAL POP
NUN_JP_SOLA <1950 2060> = 82802,84316,85659,86870,87981,89018,90004,90954,91878,92782,93674,94561,95459,96389,97379,98447,99596,100822,102124,103496,104929,106427,107976,109529,111023,112413,113679,114828,115879,116867,117817,118733,119605,120428,121189,121883,122509,123073,123585,124059,124505,124930,125331,125707,126053,126365,126644,126893,127117,127326,127524,127714,127893,128058,128204,128326,128423,128494,128539,128555,128542,128499,128424,128314,128169,127985,127763,127503,127202,126860,126476,126051,125585,125081,124544,123976,123379,122755,122107,121441,120758,120063,119355,118637,117907,117166,116416,115657,114893,114125,113356,112587,111818,111052,110288,109529,108775,108026,107281,106541,105804,105071,104340,103610,102875,102135,101387,100633,99872,99102,98326; 			
// -------------------------

// INTERPOLATE ANNUAL DATA TO QUARTERLY (FUNCTION DEFINED IN LIB.GCM)
NUN_JP_SOLQ!Q = INTERP_QA_LIN(NUN_JP_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3> NUN_JP_SOLQ!Q, NUN_JP_SOLA;

OPTION FREQ=Q;

// ADDFACTOR FOR LEVEL (TRANSITION FROM HISTORY TO FORECAST)
// FIND THE LAST VALUE IN HISTORY, CREATE AN ADDFACTOR WITH THE DIFFERENCE AND ADJUST LEVEL
%DAT_END = FROMSERIES(N_JP, 'DATAEND');
%N_JP_SOLQ_ADDLEV = N_JP[%DAT_END] - NUN_JP_SOLQ[%DAT_END];
N_JP_SOLQ <%DAT_END %BNK_END> = NUN_JP_SOLQ + %N_JP_SOLQ_ADDLEV;

// COMPARE GROWTH RATES IN HISTORY AND FORECAST
PRT <%CURR_YR-2 %CURR_YR+3> N_JP, N_JP_SOLQ;

// -------------------------
// ADDFACTOR FOR GROWTH
N_JP_SOLQ_ADDGRO = 0;
N_JP_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+80> = M();
N_JP_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+4> = 0;
// -------------------------

SMOOTH N_JP_SOLQ_ADDGRO = N_JP_SOLQ_ADDGRO LINEAR;

// EXTEND HISTORY USING GROWTH RATE (FUNCTIONS DEFINED IN LIB.GCM)
N_JP_SOLQ_GRO = PCHA(N_JP_SOLQ)+N_JP_SOLQ_ADDGRO;
N_JP_SOLQ_GRO = PCHA_TO_PCH(N_JP_SOLQ_GRO);
N_JP_SOLQ <%DAT_END+1 %BNK_END> %= N_JP_SOLQ_GRO;

// PRINT RESULTS
PRT <%CURR_YR-2 %CURR_YR+3> N_JP_SOLQ_GRO, N_JP_SOLQ_ADDGRO, PCHA(N_JP_SOLQ), PCHY(N_JP_SOLQ), N_JP_SOLQ, NUN_JP_SOLQ!Q;
PRT %N_JP_SOLQ_ADDLEV;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE N_JP_SOLA!A = N_JP_SOLQ!Q AVG; // FOR STOCK TYPE VARIABLES AVG, FOR FLOW TYPE VARIABLES TOTAL
PRT <%CURR_YR-2 %CURR_YR+3> N_JP_SOLA!A, N_JP_SOLQ!Q, N_JP!A, N_JP!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> N_JP<DASHTYPE='1' LINECOLOR='blue'>, N_JP_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, N_JP!A<DASHTYPE='1' LINECOLOR='red'>, N_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\N_JP_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> N_JP!Q<TYPE=LINES DASHTYPE='1'>, N_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(N_JP!Q)<TYPE=BOXES Y2>, PCHA(N_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\N_JP_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*N*!*;
DELETE %N_JP_SOLQ_ADDLEV, N_JP_SOLQ_GRO, N_JP_SOLQ_ADDGRO;



TELL '*************************';
TELL ' 15+ POPULATION          ';
TELL '*************************';

OPTION FREQ=A;

// USE POPULATION ESTIMATES AND PROJECTIONS FROM THE UN
// UN WORLD POPULATION PROSPECTS 2019 -- MEDIUM VARIANT HTTPS://POPULATION.UN.ORG/WPP/DOWNLOAD/STANDARD/INTERPOLATED/WPP2019_INT_F03_1_POPULATION_BY_AGE_ANNUAL_BOTH_SEXES.XLSX

// -------------------------
// FILL SERIES WITH UN PROJECTIONS OF 15+ POP
NUN15_JP_SOLA <1950 2060> = 53514,54664,55892,57021,58062,59100,60365,61517,62675,63936,65324,66751,68274,69862,71447,72983,74362,75759,77127,78423,79627,80847,81941,82943,83938,84976,85841,86857,87958,89031,90031,91263,92308,93273,94318,95505,96584,97817,99129,100382,101503,102541,103476,104313,105094,105836,106511,107113,107661,108178,108671,109094,109519,109926,110284,110579,110846,111036,111170,111278,111376,111401,111417,111421,111402,111361,111264,111164,111052,110910,110732,110548,110296,110000,109692,109383,109001,108619,108225,107796,107322,106783,106205,105592,104956,104305,103610,102899,102178,101450,100721,99975,99227,98480,97744,97024,96295,95580,94881,94202,93540,92868,92209,91563,90927,90298,89646,88993,88340,87687,87035; 			
// -------------------------

// INTERPOLATE ANNUAL DATA TO QUARTERLY (FUNCTION DEFINED IN LIB.GCM)
NUN15_JP_SOLQ!Q = INTERP_QA_LIN(NUN15_JP_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3> NUN_JP_SOLQ!Q, NUN_JP_SOLA,NUN15_JP_SOLQ!Q, NUN15_JP_SOLA;



TELL '*************************';
TELL ' LABOR FORCE             ';
TELL '*************************';

// THIS SECTION CONTAINS THREE STAGES: 
// 1. ESTABLISH APPROXIMATE LFP AND LF PATHS AT THE ANNUAL FREQUENCY, 
// 2. ADDFACTOR LF AT THE QUARTERLY FREQUENCY,
// 3. RECALCULATE LFP WITH ADDFACTORED LF


// STAGE 1.


// THE LFP IMPLIED BY NUN15_JP_SOLA IS
LFP_JP_SOLA_TEMP = LF_JP/NUN15_JP_SOLA*100;  // CALCULATE LFP ESTIMATE
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_JP_SOLA_TEMP, LFP_JP, LFP_JP_SOLA_TEMP-LFP_JP; // COMPARE THE CALCULATED LFP TO ACTUAL LFP HISTORY

// -------------------------
// THE VALUES BELOW ARE FROM LFP PROJECTION FROM OECD; LOOKING TO 2060: A GLOBAL VISION OF LONG-TERM GROWTH - OECD 2012
// ALSO LOOK AT OECD LONG TERM PROJECTIONS: HTTPS://STATS.OECD.ORG/VIEWHTML.ASPX?DATASETCODE=EO103_LTB&LANG=EN
LFP_JP_SOLA_TEMP <2028 2028> =  58.7+0.5+1.2+0.5;
LFP_JP_SOLA_TEMP <2058 2060> =  57.2+0.9+0.5;
// -------------------------

SMOOTH LFP_JP_SOLA_TEMP = LFP_JP_SOLA_TEMP LINEAR;

// USE THE INTERPOLATED LFP TO EXTEND THE LFP HISTORY
%DAT_END = FROMSERIES(LFP_JP_SOLA, 'DATAEND');
LFP_JP_SOLA <%DAT_END+1 %BNK_END> %= PCH(LFP_JP_SOLA_TEMP);
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_JP, LFP_JP_SOLA_TEMP, LFP_JP_SOLA;

// USE THE IMPLIED LFP TO EXTEND THE LF HISTORY
%DAT_END = FROMSERIES(LF_JP, 'DATAEND');
LF_JP_SOLA <%DAT_END+1 %BNK_END> %= PCH(LFP_JP_SOLA_TEMP * NUN15_JP_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3 N> LF_JP, LF_JP_SOLA;

// INTERPOLATE ANNUAL LFP AND LF TO QUARTERLY
LFP_JP_SOLQ!Q = INTERP_QA_LIN(LFP_JP_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_JP_SOLQ!Q, LFP_JP!Q, LFP_JP_SOLA, LFP_JP;
LF_JP_SOLQ!Q = INTERP_QA_LIN(LF_JP_SOLA);
PRT <%CURR_YR-2 %CURR_YR+3 N> LF_JP_SOLQ!Q, LF_JP!Q, LF_JP_SOLA, LF_JP;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LFP_JP_SOLQ!Q<DASHTYPE='2' LINECOLOR='black'>, LFP_JP!Q<DASHTYPE='1' LINECOLOR='black'>, LFP_JP_SOLA<DASHTYPE='2' LINECOLOR='blue'>, LFP_JP_SOLA_BLS<DASHTYPE='2' LINECOLOR='red'>, LFP_JP<DASHTYPE='1' LINECOLOR='blue'> FILE='{%WORK_DIR}\FIG\LFP_JP_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LF_JP_SOLQ!Q<DASHTYPE='2' LINECOLOR='black'>, LF_JP!Q<DASHTYPE='1' LINECOLOR='black'>, LF_JP_SOLA<DASHTYPE='2' LINECOLOR='blue'>, LF_JP<DASHTYPE='1' LINECOLOR='blue'> FILE='{%WORK_DIR}\FIG\LF_JP_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*LFP*!*;
DELETE LFP_JP_SOLA_TEMP;


// STAGE 2.


OPTION FREQ=Q;

// ADDFACTOR FOR LEVEL (TRANSITION FROM HISTORY TO FORECAST)
// FIND THE LAST VALUE IN HISTORY, CREATE AN ADDFACTOR WITH THE DIFFERENCE AND ADJUST LEVEL
%DAT_END = FROMSERIES(LF_JP, 'DATAEND');
%LF_JP_SOLQ_ADDLEV = LF_JP[%DAT_END] - LF_JP_SOLQ[%DAT_END];
LF_JP_SOLQ <%DAT_END %BNK_END> = LF_JP_SOLQ + %LF_JP_SOLQ_ADDLEV;

// COMPARE GROWTH RATES IN HISTORY AND FORECAST
PRT <%CURR_YR-2 %CURR_YR+3> LF_JP, LF_JP_SOLQ;

// -------------------------
// ADDFACTOR FOR GROWTH
LF_JP_SOLQ_ADDGRO = 0;
LF_JP_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+15> = M();
LF_JP_SOLQ_ADDGRO <%DAT_END+1 %DAT_END+10> = -1.5, -1.2, -0.6, -0.3, -0.1, 0, 0.1, 0.2, 0.4, 0.8;
// -------------------------

SMOOTH LF_JP_SOLQ_ADDGRO = LF_JP_SOLQ_ADDGRO LINEAR;

// EXTEND HISTORY USING GROWTH RATE (FUNCTIONS DEFINED IN LIB.GCM)
LF_JP_SOLQ_GRO = PCHA(LF_JP_SOLQ)+LF_JP_SOLQ_ADDGRO;
LF_JP_SOLQ_GRO = PCHA_TO_PCH(LF_JP_SOLQ_GRO);
LF_JP_SOLQ <%BNK_START %DAT_END> = LF_JP;
LF_JP_SOLQ <%DAT_END+1 %BNK_END> %= LF_JP_SOLQ_GRO;

// PRINT RESULTS
PRT <%CURR_YR-2 %CURR_YR+3> LF_JP_SOLQ_GRO, LF_JP_SOLQ_ADDGRO, PCHA(LF_JP_SOLQ), PCHY(LF_JP_SOLQ), LF_JP_SOLQ, LF_JP;
PRT %LF_JP_SOLQ_ADDLEV;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE LF_JP_SOLA!A = LF_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> LF_JP_SOLA!A, LF_JP_SOLQ!Q, LF_JP!A, LF_JP!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LF_JP<DASHTYPE='1' LINECOLOR='blue'>, LF_JP_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, LF_JP!A<DASHTYPE='1' LINECOLOR='red'>, LF_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\LF_JP_FIG2.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> LF_JP!Q<TYPE=LINES DASHTYPE='1'>, LF_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(LF_JP!Q)<TYPE=BOXES Y2>, PCHA(LF_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\LF_JP_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*LF*!*;
DELETE %LF_JP_SOLQ_ADDLEV, LF_JP_SOLQ_GRO, LF_JP_SOLQ_ADDGRO;


// STAGE 3.


// CALCULATE LFP IMPLIED BY LF AND NUN15_JP_SOLQ
LFP_JP_SOLQ_IMP = LF_JP_SOLQ/NUN15_JP_SOLQ*100;  
// USE THE IMPLIED LFP EXTEND HISTORY
%DAT_END = FROMSERIES(LFP_JP, 'DATAEND');
LFP_JP_SOLQ <%BNK_START %DAT_END> = LFP_JP;
LFP_JP_SOLQ <%DAT_END+1 %BNK_END> %= PCH(LFP_JP_SOLQ_IMP);
// COMPARE THE IMPLIED AND ACTUAL LFP
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_JP_SOLQ_IMP, LFP_JP_SOLQ, LFP_JP, LFP_JP_SOLQ-LFP_JP; 

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE LFP_JP_SOLA!A = LFP_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3 N> LFP_JP_SOLA!A, LFP_JP_SOLQ!Q, LFP_JP!A, LFP_JP!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> LFP_JP<DASHTYPE='1' LINECOLOR='blue'>, LFP_JP_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, LFP_JP!A<DASHTYPE='1' LINECOLOR='red'>, LFP_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\LFP_JP_FIG2.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*LFP*!*;
DELETE LFP_JP_SOLQ_IMP;



TELL '*************************';
TELL ' UNEMPLOYMENT RATE AND EMPLOYMENT';
TELL '*************************';

// -------------------------
// SHORT RUN ASSUMPTION
UR_JP_SOLQ <2020Q2 2021Q4> = 4.5, 3.6, 3.4, 3.3, 3.25, 3.225, 3.2;
// LONG RUN = NAIRU
UR_JP_SOLQ <2024 %BNK_END> = 3.0;
// -------------------------

SMOOTH UR_JP_SOLQ = UR_JP_SOLQ LINEAR;

// EMPLOYMENT FORECAST
%DAT_END = FROMSERIES(EMPL_JP, 'DATAEND');
EMPL_JP_SOLQ <%DAT_END+1 %BNK_END> = (1-UR_JP_SOLQ/100)*LF_JP_SOLQ;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE UR_JP_SOLA!A = UR_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3 N> UR_JP_SOLA!A, UR_JP_SOLQ!Q, UR_JP!A, UR_JP!Q;
COLLAPSE EMPL_JP_SOLA!A = EMPL_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> EMPL_JP_SOLA!A, EMPL_JP_SOLQ!Q, EMPL_JP!A, EMPL_JP!Q;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> UR_JP<DASHTYPE='1' LINECOLOR='blue'>, UR_JP_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, UR_JP!A<DASHTYPE='1' LINECOLOR='red'>, UR_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\UR_JP_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> EMPL_JP<DASHTYPE='1' LINECOLOR='blue'>, EMPL_JP_SOLQ<DASHTYPE='2' LINECOLOR='blue'>, EMPL_JP!A<DASHTYPE='1' LINECOLOR='red'>, EMPL_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\EMPL_JP_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> EMPL_JP!Q<TYPE=LINES DASHTYPE='1'>, EMPL_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(EMPL_JP!Q)<TYPE=BOXES Y2>, PCHA(EMPL_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\EMPL_JP_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*UR*!*, *:*EMPL*!*;



TELL '*************************';
TELL ' PRODUCTIVITY AND GDP    ';
TELL '*************************';

// DEFINE PRODUCTIVITY
PROD_JP = GDP_R_JP / EMPL_JP;
PROD_JP_SOLQ = PROD_JP;
// MOVING AVERAGES OF 10 AND 20 YEAR ANNUAL PRODUCTIVITY GROWTH
PRT <%CURR_YR-10 %CURR_YR N> PCHA(PROD_JP), (EXP((LOG(PROD_JP)-LAG(LOG(PROD_JP),40))/10)-1)*100, (EXP((LOG(PROD_JP)-LAG(LOG(PROD_JP),80))/20)-1)*100;

// -------------------------
// SHORT (AND LONG) RUN ASSUMPTION
PROD_JP_SOLQ_GRO = PCHA(PROD_JP_SOLQ);
PROD_JP_SOLQ_GRO <2020Q1 2021Q4> = -6, -4.5, 2.0, 3, 4, 3, 2.5, 2;
PROD_JP_SOLQ_GRO <2025Q4 %BNK_END> = 1.1 REP *;
// -------------------------

SMOOTH PROD_JP_SOLQ_GRO = PROD_JP_SOLQ_GRO LINEAR;

// GDP FORECAST
%DAT_END = FROMSERIES(GDP_R_JP, 'DATAEND');
PROD_JP_SOLQ_GRO = PCHA_TO_PCH(PROD_JP_SOLQ_GRO);
PROD_JP_SOLQ <%DAT_END+1 %BNK_END> %= PROD_JP_SOLQ_GRO;
GDP_R_JP_SOLQ <%DAT_END+1 %BNK_END> = PROD_JP_SOLQ * EMPL_JP_SOLQ;

// GDP PER CAPITA FORECAST
%DAT_END = FROMSERIES(GDPPC_R_JP, 'DATAEND');
GDPPC_R_JP_SOLQ <%DAT_END+1 %BNK_END> = GDP_R_JP_SOLQ / N_JP_SOLQ * 1000;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE GDP_R_JP_SOLA!A = GDP_R_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> GDP_R_JP_SOLA!A, GDP_R_JP_SOLQ!Q, GDP_R_JP!A, GDP_R_JP!Q;

OPTION FREQ=A;

// ANNUAL HISTORICAL PRODUCTIVITY
PROD_JP = GDP_R_JP/EMPL_JP;
PROD_JP_SOLA = PROD_JP;
// ANNUAL PRODUCTIVITY FORECAST
%DAT_END = FROMSERIES(GDP_R_JP, 'DATAEND');
PROD_JP_SOLA <%DAT_END+1 %BNK_END> = GDP_R_JP_SOLA/EMPL_JP_SOLA;
// ANNUAL GDPPC FORECAST
GDPPC_R_JP_SOLA <%DAT_END+1 %BNK_END> = GDP_R_JP_SOLA / N_JP_SOLA * 1000;

// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> PROD_JP!Q<DASHTYPE='1' LINECOLOR='blue'>, PROD_JP_SOLQ!Q<DASHTYPE='2' LINECOLOR='blue'>, PROD_JP!A<DASHTYPE='1' LINECOLOR='red'>, PROD_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\PROD_JP_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> GDP_R_JP!Q<DASHTYPE='1' LINECOLOR='blue'>, GDP_R_JP_SOLQ!Q<DASHTYPE='2' LINECOLOR='blue'>, GDP_R_JP!A<DASHTYPE='1' LINECOLOR='red'>, GDP_R_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red'> FILE='{%WORK_DIR}\FIG\GDP_R_JP_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> GDP_R_JP!Q<TYPE=LINES DASHTYPE='1'>, GDP_R_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(GDP_R_JP!Q)<TYPE=BOXES Y2>, PCHA(GDP_R_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\GDP_R_JP_GR_FIG.pdf';
PLOT <%CURR_YR-10 %CURR_YR+15> GDPPC_R_JP!Q<TYPE=LINES DASHTYPE='1'>, GDPPC_R_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(GDPPC_R_JP!Q)<TYPE=BOXES Y2>, PCHA(GDPPC_R_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\GDPPC_R_JP_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*PROD*!*, *:*GDP*!*;
DELETE PROD_JP_SOLQ_GRO!Q;



TELL '*************************';
TELL ' CPI                     ';
TELL '*************************';

OPTION FREQ=Q;

// -------------------------
// SHORT (AND LONG) RUN ASSUMPTION
CPI_JP_SOLQ_GRO <2020Q2 2021Q2> = -2.5, -0.5, 0.1, 0.2, 0.3;
CPI_JP_SOLQ_GRO <2023Q4 %BNK_END> = 1.0;
// -------------------------

SMOOTH CPI_JP_SOLQ_GRO = CPI_JP_SOLQ_GRO LINEAR;

// CPI FORECAST
%DAT_END = FROMSERIES(CPI_JP, 'DATAEND');
CPI_JP_SOLQ_GRO = PCHA_TO_PCH(CPI_JP_SOLQ_GRO);
CPI_JP_SOLQ <%DAT_END+1 %BNK_END> %= CPI_JP_SOLQ_GRO;

// AGGREGATE TO ANNUAL FREQUENCY
COLLAPSE CPI_JP_SOLA!A = CPI_JP_SOLQ!Q AVG;
PRT <%CURR_YR-2 %CURR_YR+3> CPI_JP_SOLA!A<P>, PCHA(CPI_JP_SOLQ!Q)<N>, CPI_JP!A<P>, PCHA(CPI_JP!Q)<N>;


// PRODUCE A BASIC PLOT OF RESULTS (ATTRIBUTES IN '' ARE CASE SENSITIVE!)
PLOT <%CURR_YR-10 %CURR_YR+15 TYPE=LINES> PCHA(CPI_JP!Q)<DASHTYPE='1' LINECOLOR='blue'>, PCHA(CPI_JP_SOLQ!Q)<DASHTYPE='2' LINECOLOR='blue'>, CPI_JP!A<DASHTYPE='1' LINECOLOR='red' P>, CPI_JP_SOLA!A<DASHTYPE='2' LINECOLOR='red' P> FILE='{%WORK_DIR}\FIG\CPI_JP_FIG.pdf';

PLOT <%CURR_YR-10 %CURR_YR+15> CPI_JP!Q<TYPE=LINES DASHTYPE='1'>, CPI_JP_SOLQ!Q<TYPE=LINES DASHTYPE='2'>, PCHA(CPI_JP!Q)<TYPE=BOXES Y2>, PCHA(CPI_JP_SOLQ!Q)<TYPE=BOXES Y2> FILE='{%WORK_DIR}\FIG\CPI_JP_GR_FIG.pdf';

// DELETE TEMPORARY SERIES
INDEX *:*CPI*!*;
DELETE CPI_JP_SOLQ_GRO!Q;



TELL '*************************';
TELL ' SAVE                    ';
TELL '*************************';

INDEX *!* TO #EXT_LIST;
WRITE {#EXT_LIST} FILE=EXT_DAT;
EXPORT <ALL TSD> {#EXT_LIST} FILE=EXT_DAT;

// EXPORT DATA FOR FORECAST SNAPSHOTS
// REPLACE _JP WITH @JP IN THE TSD FILES
#JPQ = GDP_R_JP, UR_JP, LF_JP, LFP_JP, EMPL_JP, CPI_JP, N_JP;
#JPA = GDP_R_JP, UR_JP, LF_JP, LFP_JP, EMPL_JP, CPI_JP, N_JP;

EXPORT <2008 2025 TSD> {#JPQ}_SOLQ FILE=EXT_DAT_QF;
EXPORT <2008 2025 TSD> {#JPQ} FILE=EXT_DAT_QH;

OPTION FREQ=A;

EXPORT <1980 2050 TSD> {#JPA}_SOLA FILE=EXT_DAT_AF;
EXPORT <1980 2050 TSD> {#JPA} FILE=EXT_DAT_AH;

IF (%SAVESCREEN=='Y');  
PIPE <STOP>;
END;
